// Generated by purs version 0.15.9
import * as Deku_Attribute from "../Deku.Attribute/index.js";
var AriaMultiline = /* #__PURE__ */ (function () {
    function AriaMultiline() {

    };
    AriaMultiline.value = new AriaMultiline();
    return AriaMultiline;
})();
var attrView_AriaMultilineStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-multiline",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrUse_AriaMultilineStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-multiline",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrTspan_AriaMultilineSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-multiline",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrText_AriaMultilineStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-multiline",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrTextPath_AriaMultilin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-multiline",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSymbol_AriaMultilineS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-multiline",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSvg_AriaMultilineStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-multiline",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrRect_AriaMultilineStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-multiline",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPolyline_AriaMultilin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-multiline",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPolygon_AriaMultiline = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-multiline",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPath_AriaMultilineStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-multiline",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrMarker_AriaMultilineS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-multiline",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrLine_AriaMultilineStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-multiline",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrG_AriaMultilineString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-multiline",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrForeignObject_AriaMul = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-multiline",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrEllipse_AriaMultiline = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-multiline",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrCircle_AriaMultilineS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-multiline",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrAriaMultilineUnit = {
    attr: function (v) {
        return function (v1) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-multiline",
                value: Deku_Attribute["unset$prime"]
            });
        };
    }
};
export {
    AriaMultiline,
    attrCircle_AriaMultilineS,
    attrEllipse_AriaMultiline,
    attrForeignObject_AriaMul,
    attrG_AriaMultilineString,
    attrLine_AriaMultilineStr,
    attrMarker_AriaMultilineS,
    attrPath_AriaMultilineStr,
    attrPolygon_AriaMultiline,
    attrPolyline_AriaMultilin,
    attrRect_AriaMultilineStr,
    attrSvg_AriaMultilineStri,
    attrSymbol_AriaMultilineS,
    attrText_AriaMultilineStr,
    attrTextPath_AriaMultilin,
    attrTspan_AriaMultilineSt,
    attrUse_AriaMultilineStri,
    attrView_AriaMultilineStr,
    attrAriaMultilineUnit
};
