// Generated by purs version 0.15.9
import * as Deku_Attribute from "../Deku.Attribute/index.js";
var FontVariant = /* #__PURE__ */ (function () {
    function FontVariant() {

    };
    FontVariant.value = new FontVariant();
    return FontVariant;
})();
var attrTspan_FontVariantStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-variant",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrText_FontVariantStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-variant",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSwitch_FontVariantStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-variant",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrImage_FontVariantStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-variant",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFontVariantUnit = {
    attr: function (v) {
        return function (v1) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-variant",
                value: Deku_Attribute["unset$prime"]
            });
        };
    }
};
var attrFilter_FontVariantStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-variant",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeTurbulence_FontVari = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-variant",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeTile_FontVariantStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-variant",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeSpecularLighting_Fo = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-variant",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeOffset_FontVariantS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-variant",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeMorphology_FontVari = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-variant",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeMerge_FontVariantSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-variant",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeImage_FontVariantSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-variant",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeGaussianBlur_FontVa = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-variant",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeFlood_FontVariantSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-variant",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeDisplacementMap_Fon = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-variant",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeDiffuseLighting_Fon = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-variant",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeConvolveMatrix_Font = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-variant",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeComposite_FontVaria = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-variant",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeComponentTransfer_F = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-variant",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeColorMatrix_FontVar = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-variant",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeBlend_FontVariantSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-variant",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
export {
    FontVariant,
    attrFeBlend_FontVariantSt,
    attrFeColorMatrix_FontVar,
    attrFeComponentTransfer_F,
    attrFeComposite_FontVaria,
    attrFeConvolveMatrix_Font,
    attrFeDiffuseLighting_Fon,
    attrFeDisplacementMap_Fon,
    attrFeFlood_FontVariantSt,
    attrFeGaussianBlur_FontVa,
    attrFeImage_FontVariantSt,
    attrFeMerge_FontVariantSt,
    attrFeMorphology_FontVari,
    attrFeOffset_FontVariantS,
    attrFeSpecularLighting_Fo,
    attrFeTile_FontVariantStr,
    attrFeTurbulence_FontVari,
    attrFilter_FontVariantStr,
    attrImage_FontVariantStri,
    attrSwitch_FontVariantStr,
    attrText_FontVariantStrin,
    attrTspan_FontVariantStri,
    attrFontVariantUnit
};
