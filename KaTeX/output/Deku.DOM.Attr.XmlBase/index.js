// Generated by purs version 0.15.9
import * as Deku_Attribute from "../Deku.Attribute/index.js";
var XmlBase = /* #__PURE__ */ (function () {
    function XmlBase() {

    };
    XmlBase.value = new XmlBase();
    return XmlBase;
})();
var attrXmlBaseUnit = {
    attr: function (v) {
        return function (v1) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:base",
                value: Deku_Attribute["unset$prime"]
            });
        };
    }
};
var attrView_XmlBaseString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:base",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSwitch_XmlBaseString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:base",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrMpath_XmlBaseString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:base",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrMetadata_XmlBaseStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:base",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrImage_XmlBaseString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:base",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFilter_XmlBaseString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:base",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeTurbulence_XmlBaseS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:base",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeTile_XmlBaseString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:base",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeSpotLight_XmlBaseSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:base",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeSpecularLighting_Xm = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:base",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFePointLight_XmlBaseS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:base",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeOffset_XmlBaseStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:base",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeMorphology_XmlBaseS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:base",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeMerge_XmlBaseString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:base",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeMergeNode_XmlBaseSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:base",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeImage_XmlBaseString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:base",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeGaussianBlur_XmlBas = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:base",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeFuncR_XmlBaseString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:base",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeFuncG_XmlBaseString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:base",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeFuncB_XmlBaseString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:base",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeFuncA_XmlBaseString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:base",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeFlood_XmlBaseString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:base",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeDistantLight_XmlBas = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:base",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeDisplacementMap_Xml = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:base",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeDiffuseLighting_Xml = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:base",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeConvolveMatrix_XmlB = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:base",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeComposite_XmlBaseSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:base",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeComponentTransfer_X = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:base",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeColorMatrix_XmlBase = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:base",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeBlend_XmlBaseString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:base",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrDiscard_XmlBaseString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:base",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrAnimateTransform_XmlB = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:base",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
export {
    XmlBase,
    attrAnimateTransform_XmlB,
    attrDiscard_XmlBaseString,
    attrFeBlend_XmlBaseString,
    attrFeColorMatrix_XmlBase,
    attrFeComponentTransfer_X,
    attrFeComposite_XmlBaseSt,
    attrFeConvolveMatrix_XmlB,
    attrFeDiffuseLighting_Xml,
    attrFeDisplacementMap_Xml,
    attrFeDistantLight_XmlBas,
    attrFeFlood_XmlBaseString,
    attrFeFuncA_XmlBaseString,
    attrFeFuncB_XmlBaseString,
    attrFeFuncG_XmlBaseString,
    attrFeFuncR_XmlBaseString,
    attrFeGaussianBlur_XmlBas,
    attrFeImage_XmlBaseString,
    attrFeMerge_XmlBaseString,
    attrFeMergeNode_XmlBaseSt,
    attrFeMorphology_XmlBaseS,
    attrFeOffset_XmlBaseStrin,
    attrFePointLight_XmlBaseS,
    attrFeSpecularLighting_Xm,
    attrFeSpotLight_XmlBaseSt,
    attrFeTile_XmlBaseString,
    attrFeTurbulence_XmlBaseS,
    attrFilter_XmlBaseString,
    attrImage_XmlBaseString,
    attrMetadata_XmlBaseStrin,
    attrMpath_XmlBaseString,
    attrSwitch_XmlBaseString,
    attrView_XmlBaseString,
    attrXmlBaseUnit
};
