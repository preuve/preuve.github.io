// Generated by purs version 0.15.9
import * as Data_Tuple from "../Data.Tuple/index.js";
import * as Deku_Pursx from "../Deku.Pursx/index.js";
import * as Record from "../Record/index.js";
import * as Type_Proxy from "../Type.Proxy/index.js";
var EndAnonymousPursX = /* #__PURE__ */ (function () {
    function EndAnonymousPursX() {

    };
    EndAnonymousPursX.value = new EndAnonymousPursX();
    return EndAnonymousPursX;
})();
var xp = /* #__PURE__ */ (function () {
    return EndAnonymousPursX.value;
})();
var pursxValAnonymous = function (dict) {
    return dict.pursxValAnonymous;
};
var readingPursx = function () {
    return function (dictPursxValAnonymous) {
        var pursxValAnonymous1 = pursxValAnonymous(dictPursxValAnonymous);
        return {
            pursxStringAnonymous: function (v) {
                return function (v1) {
                    return pursxValAnonymous1(new Data_Tuple.Tuple(v.value0, new Data_Tuple.Tuple(Type_Proxy["Proxy"].value, v.value1.value1)));
                };
            }
        };
    };
};
var pursxStringAnonymous = function (dict) {
    return dict.pursxStringAnonymous;
};
var px = function (dictPursxStringAnonymous) {
    return pursxStringAnonymous(dictPursxStringAnonymous)(new Data_Tuple.Tuple(Type_Proxy["Proxy"].value, new Data_Tuple.Tuple(Type_Proxy["Proxy"].value, {})));
};
var readingVal = function () {
    return function (dictIsSymbol) {
        var insert = Record.insert(dictIsSymbol)()();
        return function () {
            return function () {
                return function () {
                    return function () {
                        return function () {
                            return function (dictPursxStringAnonymous) {
                                var pursxStringAnonymous1 = pursxStringAnonymous(dictPursxStringAnonymous);
                                return {
                                    pursxValAnonymous: function (v) {
                                        return function (c) {
                                            return pursxStringAnonymous1(new Data_Tuple.Tuple(Type_Proxy["Proxy"].value, new Data_Tuple.Tuple(Type_Proxy["Proxy"].value, insert(v.value0)(c)(v.value1.value1))));
                                        };
                                    }
                                };
                            };
                        };
                    };
                };
            };
        };
    };
};
var endOfTheLineV = function (dictReflectable) {
    var makePursx = Deku_Pursx.makePursx(dictReflectable)()();
    return function () {
        return function () {
            return function (dictPursxToElement) {
                var makePursx1 = makePursx(dictPursxToElement);
                return {
                    pursxValAnonymous: function (v) {
                        return function (v1) {
                            return makePursx1(v.value1.value0)(v.value1.value1);
                        };
                    }
                };
            };
        };
    };
};
var endOfTheLine = function (dictReflectable) {
    var makePursx = Deku_Pursx.makePursx(dictReflectable)()();
    return function () {
        return function () {
            return function (dictPursxToElement) {
                var makePursx1 = makePursx(dictPursxToElement);
                return {
                    pursxStringAnonymous: function (v) {
                        return function (v1) {
                            return makePursx1(v.value1.value0)(v.value1.value1);
                        };
                    }
                };
            };
        };
    };
};
export {
    pursxStringAnonymous,
    pursxValAnonymous,
    EndAnonymousPursX,
    px,
    xp,
    endOfTheLine,
    readingPursx,
    endOfTheLineV,
    readingVal
};
