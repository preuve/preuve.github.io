// Generated by purs version 0.15.9
import * as Deku_Attribute from "../Deku.Attribute/index.js";
var XmlLang = /* #__PURE__ */ (function () {
    function XmlLang() {

    };
    XmlLang.value = new XmlLang();
    return XmlLang;
})();
var attrXmlLangUnit = {
    attr: function (v) {
        return function (v1) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:lang",
                value: Deku_Attribute["unset$prime"]
            });
        };
    }
};
var attrView_XmlLangString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:lang",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSwitch_XmlLangString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:lang",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrMpath_XmlLangString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:lang",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrMetadata_XmlLangStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:lang",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrImage_XmlLangString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:lang",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFilter_XmlLangString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:lang",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeTurbulence_XmlLangS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:lang",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeTile_XmlLangString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:lang",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeSpotLight_XmlLangSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:lang",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeSpecularLighting_Xm = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:lang",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFePointLight_XmlLangS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:lang",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeOffset_XmlLangStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:lang",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeMorphology_XmlLangS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:lang",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeMerge_XmlLangString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:lang",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeMergeNode_XmlLangSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:lang",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeImage_XmlLangString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:lang",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeGaussianBlur_XmlLan = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:lang",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeFuncR_XmlLangString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:lang",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeFuncG_XmlLangString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:lang",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeFuncB_XmlLangString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:lang",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeFuncA_XmlLangString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:lang",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeFlood_XmlLangString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:lang",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeDistantLight_XmlLan = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:lang",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeDisplacementMap_Xml = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:lang",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeDiffuseLighting_Xml = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:lang",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeConvolveMatrix_XmlL = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:lang",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeComposite_XmlLangSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:lang",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeComponentTransfer_X = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:lang",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeColorMatrix_XmlLang = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:lang",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeBlend_XmlLangString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:lang",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrDiscard_XmlLangString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:lang",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrAnimateTransform_XmlL = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:lang",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
export {
    XmlLang,
    attrAnimateTransform_XmlL,
    attrDiscard_XmlLangString,
    attrFeBlend_XmlLangString,
    attrFeColorMatrix_XmlLang,
    attrFeComponentTransfer_X,
    attrFeComposite_XmlLangSt,
    attrFeConvolveMatrix_XmlL,
    attrFeDiffuseLighting_Xml,
    attrFeDisplacementMap_Xml,
    attrFeDistantLight_XmlLan,
    attrFeFlood_XmlLangString,
    attrFeFuncA_XmlLangString,
    attrFeFuncB_XmlLangString,
    attrFeFuncG_XmlLangString,
    attrFeFuncR_XmlLangString,
    attrFeGaussianBlur_XmlLan,
    attrFeImage_XmlLangString,
    attrFeMerge_XmlLangString,
    attrFeMergeNode_XmlLangSt,
    attrFeMorphology_XmlLangS,
    attrFeOffset_XmlLangStrin,
    attrFePointLight_XmlLangS,
    attrFeSpecularLighting_Xm,
    attrFeSpotLight_XmlLangSt,
    attrFeTile_XmlLangString,
    attrFeTurbulence_XmlLangS,
    attrFilter_XmlLangString,
    attrImage_XmlLangString,
    attrMetadata_XmlLangStrin,
    attrMpath_XmlLangString,
    attrSwitch_XmlLangString,
    attrView_XmlLangString,
    attrXmlLangUnit
};
