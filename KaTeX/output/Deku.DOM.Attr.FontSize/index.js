// Generated by purs version 0.15.9
import * as Deku_Attribute from "../Deku.Attribute/index.js";
var FontSize = /* #__PURE__ */ (function () {
    function FontSize() {

    };
    FontSize.value = new FontSize();
    return FontSize;
})();
var attrTspan_FontSizeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-size",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrText_FontSizeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-size",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSwitch_FontSizeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-size",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrImage_FontSizeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-size",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFontSizeUnit = {
    attr: function (v) {
        return function (v1) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-size",
                value: Deku_Attribute["unset$prime"]
            });
        };
    }
};
var attrFilter_FontSizeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-size",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeTurbulence_FontSize = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-size",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeTile_FontSizeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-size",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeSpecularLighting_Fo = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-size",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeOffset_FontSizeStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-size",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeMorphology_FontSize = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-size",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeMerge_FontSizeStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-size",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeImage_FontSizeStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-size",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeGaussianBlur_FontSi = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-size",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeFlood_FontSizeStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-size",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeDisplacementMap_Fon = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-size",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeDiffuseLighting_Fon = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-size",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeConvolveMatrix_Font = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-size",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeComposite_FontSizeS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-size",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeComponentTransfer_F = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-size",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeColorMatrix_FontSiz = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-size",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeBlend_FontSizeStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-size",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
export {
    FontSize,
    attrFeBlend_FontSizeStrin,
    attrFeColorMatrix_FontSiz,
    attrFeComponentTransfer_F,
    attrFeComposite_FontSizeS,
    attrFeConvolveMatrix_Font,
    attrFeDiffuseLighting_Fon,
    attrFeDisplacementMap_Fon,
    attrFeFlood_FontSizeStrin,
    attrFeGaussianBlur_FontSi,
    attrFeImage_FontSizeStrin,
    attrFeMerge_FontSizeStrin,
    attrFeMorphology_FontSize,
    attrFeOffset_FontSizeStri,
    attrFeSpecularLighting_Fo,
    attrFeTile_FontSizeString,
    attrFeTurbulence_FontSize,
    attrFilter_FontSizeString,
    attrImage_FontSizeString,
    attrSwitch_FontSizeString,
    attrText_FontSizeString,
    attrTspan_FontSizeString,
    attrFontSizeUnit
};
