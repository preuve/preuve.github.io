// Generated by purs version 0.15.9
import * as Deku_Attribute from "../Deku.Attribute/index.js";
var StrokeWidth = /* #__PURE__ */ (function () {
    function StrokeWidth() {

    };
    StrokeWidth.value = new StrokeWidth();
    return StrokeWidth;
})();
var attrUse_StrokeWidthString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrTspan_StrokeWidthStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrText_StrokeWidthStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrTextPath_StrokeWidthS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSymbol_StrokeWidthStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSwitch_StrokeWidthStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSvg_StrokeWidthString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrStrokeWidthUnit = {
    attr: function (v) {
        return function (v1) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["unset$prime"]
            });
        };
    }
};
var attrRect_StrokeWidthStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrRadialGradient_Stroke = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPolyline_StrokeWidthS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPolygon_StrokeWidthSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPattern_StrokeWidthSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPath_StrokeWidthStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrMask_StrokeWidthStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrMarker_StrokeWidthStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrLinearGradient_Stroke = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrLine_StrokeWidthStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrImage_StrokeWidthStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrG_StrokeWidthString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrForeignObject_StrokeW = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFilter_StrokeWidthStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeTurbulence_StrokeWi = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeTile_StrokeWidthStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeSpecularLighting_St = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeOffset_StrokeWidthS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeMorphology_StrokeWi = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeMerge_StrokeWidthSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeImage_StrokeWidthSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeGaussianBlur_Stroke = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeFlood_StrokeWidthSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeDisplacementMap_Str = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeDiffuseLighting_Str = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeConvolveMatrix_Stro = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeComposite_StrokeWid = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeComponentTransfer_S = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeColorMatrix_StrokeW = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeBlend_StrokeWidthSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrEllipse_StrokeWidthSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrDefs_StrokeWidthStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrClipPath_StrokeWidthS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrCircle_StrokeWidthStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
export {
    StrokeWidth,
    attrCircle_StrokeWidthStr,
    attrClipPath_StrokeWidthS,
    attrDefs_StrokeWidthStrin,
    attrEllipse_StrokeWidthSt,
    attrFeBlend_StrokeWidthSt,
    attrFeColorMatrix_StrokeW,
    attrFeComponentTransfer_S,
    attrFeComposite_StrokeWid,
    attrFeConvolveMatrix_Stro,
    attrFeDiffuseLighting_Str,
    attrFeDisplacementMap_Str,
    attrFeFlood_StrokeWidthSt,
    attrFeGaussianBlur_Stroke,
    attrFeImage_StrokeWidthSt,
    attrFeMerge_StrokeWidthSt,
    attrFeMorphology_StrokeWi,
    attrFeOffset_StrokeWidthS,
    attrFeSpecularLighting_St,
    attrFeTile_StrokeWidthStr,
    attrFeTurbulence_StrokeWi,
    attrFilter_StrokeWidthStr,
    attrForeignObject_StrokeW,
    attrG_StrokeWidthString,
    attrImage_StrokeWidthStri,
    attrLine_StrokeWidthStrin,
    attrLinearGradient_Stroke,
    attrMarker_StrokeWidthStr,
    attrMask_StrokeWidthStrin,
    attrPath_StrokeWidthStrin,
    attrPattern_StrokeWidthSt,
    attrPolygon_StrokeWidthSt,
    attrPolyline_StrokeWidthS,
    attrRadialGradient_Stroke,
    attrRect_StrokeWidthStrin,
    attrSvg_StrokeWidthString,
    attrSwitch_StrokeWidthStr,
    attrSymbol_StrokeWidthStr,
    attrText_StrokeWidthStrin,
    attrTextPath_StrokeWidthS,
    attrTspan_StrokeWidthStri,
    attrUse_StrokeWidthString,
    attrStrokeWidthUnit
};
