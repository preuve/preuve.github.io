// Generated by purs version 0.15.9
import * as Deku_Attribute from "../Deku.Attribute/index.js";
var AriaValuetext = /* #__PURE__ */ (function () {
    function AriaValuetext() {

    };
    AriaValuetext.value = new AriaValuetext();
    return AriaValuetext;
})();
var attrView_AriaValuetextStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-valuetext",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrUse_AriaValuetextStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-valuetext",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrTspan_AriaValuetextSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-valuetext",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrText_AriaValuetextStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-valuetext",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrTextPath_AriaValuetex = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-valuetext",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSymbol_AriaValuetextS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-valuetext",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSvg_AriaValuetextStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-valuetext",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrRect_AriaValuetextStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-valuetext",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPolyline_AriaValuetex = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-valuetext",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPolygon_AriaValuetext = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-valuetext",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPath_AriaValuetextStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-valuetext",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrMarker_AriaValuetextS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-valuetext",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrLine_AriaValuetextStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-valuetext",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrG_AriaValuetextString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-valuetext",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrForeignObject_AriaVal = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-valuetext",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrEllipse_AriaValuetext = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-valuetext",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrCircle_AriaValuetextS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-valuetext",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrAriaValuetextUnit = {
    attr: function (v) {
        return function (v1) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-valuetext",
                value: Deku_Attribute["unset$prime"]
            });
        };
    }
};
export {
    AriaValuetext,
    attrCircle_AriaValuetextS,
    attrEllipse_AriaValuetext,
    attrForeignObject_AriaVal,
    attrG_AriaValuetextString,
    attrLine_AriaValuetextStr,
    attrMarker_AriaValuetextS,
    attrPath_AriaValuetextStr,
    attrPolygon_AriaValuetext,
    attrPolyline_AriaValuetex,
    attrRect_AriaValuetextStr,
    attrSvg_AriaValuetextStri,
    attrSymbol_AriaValuetextS,
    attrText_AriaValuetextStr,
    attrTextPath_AriaValuetex,
    attrTspan_AriaValuetextSt,
    attrUse_AriaValuetextStri,
    attrView_AriaValuetextStr,
    attrAriaValuetextUnit
};
