// Generated by purs version 0.15.9
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Control_Bind from "../Control.Bind/index.js";
import * as Control_Monad_Writer_Class from "../Control.Monad.Writer.Class/index.js";
import * as Control_Monad_Writer_Trans from "../Control.Monad.Writer.Trans/index.js";
import * as Data_Array from "../Data.Array/index.js";
import * as Data_Eq from "../Data.Eq/index.js";
import * as Data_Foldable from "../Data.Foldable/index.js";
import * as Data_Functor from "../Data.Functor/index.js";
import * as Data_Geometry_Plane from "../Data.Geometry.Plane/index.js";
import * as Data_Identity from "../Data.Identity/index.js";
import * as Data_Int from "../Data.Int/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_Number from "../Data.Number/index.js";
import * as Data_Show from "../Data.Show/index.js";
import * as Deku_Attribute from "../Deku.Attribute/index.js";
import * as Deku_Control from "../Deku.Control/index.js";
import * as Deku_Core from "../Deku.Core/index.js";
import * as Deku_DOM from "../Deku.DOM/index.js";
import * as Deku_DOM_Attr_Href from "../Deku.DOM.Attr.Href/index.js";
import * as Deku_DOM_Attr_Style from "../Deku.DOM.Attr.Style/index.js";
import * as Deku_DOM_Elt_A from "../Deku.DOM.Elt.A/index.js";
import * as Deku_DOM_Elt_B from "../Deku.DOM.Elt.B/index.js";
import * as Deku_DOM_Elt_Br from "../Deku.DOM.Elt.Br/index.js";
import * as Deku_DOM_Elt_Div from "../Deku.DOM.Elt.Div/index.js";
import * as Deku_DOM_Elt_Em from "../Deku.DOM.Elt.Em/index.js";
import * as Deku_DOM_Elt_H1 from "../Deku.DOM.Elt.H1/index.js";
import * as Deku_DOM_Elt_H2 from "../Deku.DOM.Elt.H2/index.js";
import * as Deku_DOM_Elt_H3 from "../Deku.DOM.Elt.H3/index.js";
import * as Deku_DOM_Elt_H4 from "../Deku.DOM.Elt.H4/index.js";
import * as Deku_DOM_Elt_H5 from "../Deku.DOM.Elt.H5/index.js";
import * as Deku_DOM_Elt_Hr from "../Deku.DOM.Elt.Hr/index.js";
import * as Deku_DOM_Elt_Label from "../Deku.DOM.Elt.Label/index.js";
import * as Deku_DOM_Elt_Pre from "../Deku.DOM.Elt.Pre/index.js";
import * as FRP_Event from "../FRP.Event/index.js";
import * as KaTeX from "../KaTeX/index.js";
var bind = /* #__PURE__ */ Control_Bind.bind(Data_Maybe.bindMaybe);
var attr = /* #__PURE__ */ Deku_Attribute.attr(Deku_DOM.attrSelfElementFunctionEf);
var tell = /* #__PURE__ */ Control_Monad_Writer_Class.tell(/* #__PURE__ */ Control_Monad_Writer_Trans.monadTellWriterT(Deku_Core.monoidNut)(Data_Identity.monadIdentity));
var map = /* #__PURE__ */ Data_Functor.map(FRP_Event.functorEvent);
var pure = /* #__PURE__ */ Control_Applicative.pure(FRP_Event.applicativeEvent);
var pureAttr = /* #__PURE__ */ Deku_Attribute.pureAttr(Deku_DOM_Attr_Style.attrDiv_StyleString);
var pureAttr1 = /* #__PURE__ */ Deku_Attribute.pureAttr(Deku_DOM_Attr_Style.attrLabel_StyleString);
var plus = /* #__PURE__ */ Data_Geometry_Plane.plus(Data_Geometry_Plane.summublePointVector);
var abs = /* #__PURE__ */ Data_Geometry_Plane.abs(Data_Geometry_Plane.basedPoint);
var ord = /* #__PURE__ */ Data_Geometry_Plane.ord(Data_Geometry_Plane.basedPoint);
var show = /* #__PURE__ */ Data_Show.show(Data_Show.showInt);
var foldr = /* #__PURE__ */ Data_Foldable.foldr(Data_Foldable.foldableArray);
var fromJust = /* #__PURE__ */ Data_Maybe.fromJust();
var elemIndex = /* #__PURE__ */ Data_Array.elemIndex(Data_Eq.eqInt);
var pureAttr2 = /* #__PURE__ */ Deku_Attribute.pureAttr(Deku_DOM_Attr_Href.attrA_HrefString);
var validateInput = function (inp) {
    return bind(bind(inp)(Data_Number.fromString))(function (x) {
        var $29 = Data_Number["isNaN"](x);
        if ($29) {
            return Data_Maybe.Nothing.value;
        };
        return new Data_Maybe.Just(Data_Int.round(x));
    });
};
var toSeed = function (txt) {
    var v = validateInput(new Data_Maybe.Just(txt));
    if (v instanceof Data_Maybe.Just) {
        return v.value0;
    };
    return 0;
};
var t$prime = function (txt) {
    return attr(Deku_DOM.Self.value)(KaTeX.textMode(txt));
};
var t = function (str) {
    return tell(Deku_DOM_Elt_Label.label([ map(t$prime)(str) ])([  ]));
};
var t_ = function (str) {
    return t(pure(str));
};
var subsubsubsection_ = function (str) {
    return tell(Deku_DOM_Elt_H5.h5_([ Deku_Control.text_(str) ]));
};
var subsubsection_ = function (str) {
    return tell(Deku_DOM_Elt_H4.h4_([ Deku_Control.text_(str) ]));
};
var subsection_ = function (str) {
    return tell(Deku_DOM_Elt_H3.h3_([ Deku_Control.text_(str) ]));
};
var setTitle_ = function (str) {
    return tell(Deku_DOM_Elt_H1.h1_([ Deku_Control.text_(str) ]));
};
var section_ = function (str) {
    return tell(Deku_DOM_Elt_H2.h2_([ Deku_Control.text_(str) ]));
};
var pre_ = function (str) {
    return tell(Deku_DOM_Elt_Pre.pre_([ Deku_Control.text_(str) ]));
};
var openSection_ = function (title) {
    return function (points) {
        return tell(Deku_DOM_Elt_Div.div_([ Deku_DOM_Elt_Div.div([ pureAttr(Deku_DOM_Attr_Style.Style.value)("margin: 0; display: flex; justify-content: space-between") ])([ Deku_DOM_Elt_Label.label([ pureAttr1(Deku_DOM_Attr_Style.Style.value)("font-size: 24px; font-weight: 700;") ])([ Deku_Control.text_(title) ]), Deku_DOM_Elt_Label.label([ pureAttr1(Deku_DOM_Attr_Style.Style.value)("font-size: 16px; font-weight: 700;") ])([ Deku_Control.text_(points) ]) ]), Deku_DOM_Elt_Hr.hr_([  ]) ]));
    };
};
var nl$prime = /* #__PURE__ */ (function () {
    return attr(Deku_DOM.Self.value)(KaTeX.textMode("<br>"));
})();
var nl = /* #__PURE__ */ tell(/* #__PURE__ */ Deku_DOM_Elt_Br.br_([  ]));
var measure = function (dictApplicative) {
    var pure1 = Control_Applicative.pure(dictApplicative);
    return function (p) {
        return function (q) {
            return function (howFar) {
                var v = Data_Geometry_Plane.vector(p)(q);
                var n = Data_Geometry_Plane.normalTo(v);
                var mid = plus(Data_Geometry_Plane.middle("")(Data_Geometry_Plane.segment(p)(q)(Data_Maybe.Nothing.value)))(Data_Geometry_Plane.scale(howFar)(Data_Geometry_Plane.normalized(n)));
                var x = Data_Int.round(abs(mid));
                var y = Data_Int.round(ord(mid));
                var pos = show(x) + ("," + show(y));
                var grow = (ord(q) - ord(p)) * (abs(q) - abs(p)) > 0.0;
                var a = Data_Int.round((function (v1) {
                    return v1 / Data_Number.pi;
                })((function (v1) {
                    return v1 * 180.0;
                })(Data_Number.acos(Data_Geometry_Plane.cosAngle(v)(Data_Geometry_Plane.vector(Data_Geometry_Plane.point("")(0.0)(0.0))(Data_Geometry_Plane.point("")(1.0)(0.0)))))));
                return [ pure1(Deku_Attribute.unsafeAttribute({
                    key: "x",
                    value: Deku_Attribute["prop$prime"](show(x))
                })), pure1(Deku_Attribute.unsafeAttribute({
                    key: "x",
                    value: Deku_Attribute["prop$prime"](show(x))
                })), pure1(Deku_Attribute.unsafeAttribute({
                    key: "transform",
                    value: Deku_Attribute["prop$prime"]("rotate(" + (show((function () {
                        if (grow) {
                            return a;
                        };
                        return -a | 0;
                    })()) + ("," + (pos + ") "))))
                })) ];
            };
        };
    };
};
var m$prime = function (txt) {
    return attr(Deku_DOM.Self.value)(KaTeX.render(txt));
};
var m = function (str) {
    return tell(Deku_DOM_Elt_Label.label([ map(m$prime)(str) ])([  ]));
};
var m_ = function (str) {
    return m(pure(str));
};
var invPerm = function (ps) {
    return foldr(function (i) {
        return function (acc) {
            return Data_Array.cons(fromJust(elemIndex(i)(ps)))(acc);
        };
    })([  ])(Data_Array.range(0)(Data_Array.length(ps) - 1 | 0));
};
var equation = function (str) {
    return tell(Deku_DOM_Elt_Label.label([ map(function (txt) {
        return attr(Deku_DOM.Self.value)(KaTeX.display(txt));
    })(str) ])([  ]));
};
var equation_ = function (str) {
    return equation(pure(str));
};
var em_ = function (str) {
    return tell(Deku_DOM_Elt_Em.em_([ Deku_Control.text_(str) ]));
};
var b_ = function (str) {
    return tell(Deku_DOM_Elt_B.b_([ Deku_Control.text_(str) ]));
};
var a_ = function (str) {
    return tell(Deku_DOM_Elt_A.a([ pureAttr2(Deku_DOM_Attr_Href.Href.value)(str) ])([ Deku_Control.text_(str) ]));
};
export {
    m$prime,
    m,
    m_,
    t$prime,
    t,
    t_,
    nl,
    nl$prime,
    setTitle_,
    equation,
    equation_,
    em_,
    b_,
    a_,
    pre_,
    section_,
    subsection_,
    subsubsection_,
    subsubsubsection_,
    openSection_,
    invPerm,
    measure,
    validateInput,
    toSeed
};
