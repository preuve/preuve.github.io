// Generated by purs version 0.15.9
import * as Deku_Attribute from "../Deku.Attribute/index.js";
var Width = /* #__PURE__ */ (function () {
    function Width() {

    };
    Width.value = new Width();
    return Width;
})();
var attrWidthUnit = {
    attr: function (v) {
        return function (v1) {
            return Deku_Attribute.unsafeAttribute({
                key: "width",
                value: Deku_Attribute["unset$prime"]
            });
        };
    }
};
var attrVideo_WidthString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrUse_WidthString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSymbol_WidthString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSvg_WidthString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrRect_WidthString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPattern_WidthString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrObject_WidthString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrMask_WidthString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrInput_WidthString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrImg_WidthString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrImage_WidthString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrIframe_WidthString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrForeignObject_WidthSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFilter_WidthString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeTurbulence_WidthStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeTile_WidthString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeSpecularLighting_Wi = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeOffset_WidthString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeMorphology_WidthStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeMerge_WidthString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeImage_WidthString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeGaussianBlur_WidthS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeFlood_WidthString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeDropShadow_WidthStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeDisplacementMap_Wid = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeDiffuseLighting_Wid = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeConvolveMatrix_Widt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeComposite_WidthStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeComponentTransfer_W = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeColorMatrix_WidthSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeBlend_WidthString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrEmbed_WidthString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrCanvas_WidthString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "width",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
export {
    Width,
    attrCanvas_WidthString,
    attrEmbed_WidthString,
    attrIframe_WidthString,
    attrImg_WidthString,
    attrInput_WidthString,
    attrObject_WidthString,
    attrVideo_WidthString,
    attrFeBlend_WidthString,
    attrFeColorMatrix_WidthSt,
    attrFeComponentTransfer_W,
    attrFeComposite_WidthStri,
    attrFeConvolveMatrix_Widt,
    attrFeDiffuseLighting_Wid,
    attrFeDisplacementMap_Wid,
    attrFeDropShadow_WidthStr,
    attrFeFlood_WidthString,
    attrFeGaussianBlur_WidthS,
    attrFeImage_WidthString,
    attrFeMerge_WidthString,
    attrFeMorphology_WidthStr,
    attrFeOffset_WidthString,
    attrFeSpecularLighting_Wi,
    attrFeTile_WidthString,
    attrFeTurbulence_WidthStr,
    attrFilter_WidthString,
    attrForeignObject_WidthSt,
    attrImage_WidthString,
    attrMask_WidthString,
    attrPattern_WidthString,
    attrRect_WidthString,
    attrSvg_WidthString,
    attrSymbol_WidthString,
    attrUse_WidthString,
    attrWidthUnit
};
