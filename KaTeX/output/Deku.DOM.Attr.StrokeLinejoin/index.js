// Generated by purs version 0.15.9
import * as Deku_Attribute from "../Deku.Attribute/index.js";
var StrokeLinejoin = /* #__PURE__ */ (function () {
    function StrokeLinejoin() {

    };
    StrokeLinejoin.value = new StrokeLinejoin();
    return StrokeLinejoin;
})();
var attrUse_StrokeLinejoinStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrTspan_StrokeLinejoinS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrText_StrokeLinejoinSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrTextPath_StrokeLinejo = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSymbol_StrokeLinejoin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSwitch_StrokeLinejoin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSvg_StrokeLinejoinStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrStrokeLinejoinUnit = {
    attr: function (v) {
        return function (v1) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["unset$prime"]
            });
        };
    }
};
var attrRect_StrokeLinejoinSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrRadialGradient_Stroke = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPolyline_StrokeLinejo = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPolygon_StrokeLinejoi = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPattern_StrokeLinejoi = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPath_StrokeLinejoinSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrMask_StrokeLinejoinSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrMarker_StrokeLinejoin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrLinearGradient_Stroke = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrLine_StrokeLinejoinSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrImage_StrokeLinejoinS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrG_StrokeLinejoinStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrForeignObject_StrokeL = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFilter_StrokeLinejoin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeTurbulence_StrokeLi = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeTile_StrokeLinejoin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeSpecularLighting_St = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeOffset_StrokeLinejo = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeMorphology_StrokeLi = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeMerge_StrokeLinejoi = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeImage_StrokeLinejoi = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeGaussianBlur_Stroke = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeFlood_StrokeLinejoi = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeDisplacementMap_Str = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeDiffuseLighting_Str = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeConvolveMatrix_Stro = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeComposite_StrokeLin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeComponentTransfer_S = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeColorMatrix_StrokeL = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeBlend_StrokeLinejoi = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrEllipse_StrokeLinejoi = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrDefs_StrokeLinejoinSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrClipPath_StrokeLinejo = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrCircle_StrokeLinejoin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linejoin",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
export {
    StrokeLinejoin,
    attrCircle_StrokeLinejoin,
    attrClipPath_StrokeLinejo,
    attrDefs_StrokeLinejoinSt,
    attrEllipse_StrokeLinejoi,
    attrFeBlend_StrokeLinejoi,
    attrFeColorMatrix_StrokeL,
    attrFeComponentTransfer_S,
    attrFeComposite_StrokeLin,
    attrFeConvolveMatrix_Stro,
    attrFeDiffuseLighting_Str,
    attrFeDisplacementMap_Str,
    attrFeFlood_StrokeLinejoi,
    attrFeGaussianBlur_Stroke,
    attrFeImage_StrokeLinejoi,
    attrFeMerge_StrokeLinejoi,
    attrFeMorphology_StrokeLi,
    attrFeOffset_StrokeLinejo,
    attrFeSpecularLighting_St,
    attrFeTile_StrokeLinejoin,
    attrFeTurbulence_StrokeLi,
    attrFilter_StrokeLinejoin,
    attrForeignObject_StrokeL,
    attrG_StrokeLinejoinStrin,
    attrImage_StrokeLinejoinS,
    attrLine_StrokeLinejoinSt,
    attrLinearGradient_Stroke,
    attrMarker_StrokeLinejoin,
    attrMask_StrokeLinejoinSt,
    attrPath_StrokeLinejoinSt,
    attrPattern_StrokeLinejoi,
    attrPolygon_StrokeLinejoi,
    attrPolyline_StrokeLinejo,
    attrRadialGradient_Stroke,
    attrRect_StrokeLinejoinSt,
    attrSvg_StrokeLinejoinStr,
    attrSwitch_StrokeLinejoin,
    attrSymbol_StrokeLinejoin,
    attrText_StrokeLinejoinSt,
    attrTextPath_StrokeLinejo,
    attrTspan_StrokeLinejoinS,
    attrUse_StrokeLinejoinStr,
    attrStrokeLinejoinUnit
};
