// Generated by purs version 0.15.9
import * as CSS_Render from "../CSS.Render/index.js";
import * as CSS_Stylesheet from "../CSS.Stylesheet/index.js";
import * as Control_Bind from "../Control.Bind/index.js";
import * as Data_Either from "../Data.Either/index.js";
import * as Data_Filterable from "../Data.Filterable/index.js";
import * as Data_Foldable from "../Data.Foldable/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_Monoid from "../Data.Monoid/index.js";
import * as Data_String_Common from "../Data.String.Common/index.js";
import * as Data_Tuple from "../Data.Tuple/index.js";
import * as Foreign_Object from "../Foreign.Object/index.js";
var filterMap = /* #__PURE__ */ Data_Filterable.filterMap(Data_Filterable.filterableArray);
var bind = /* #__PURE__ */ Control_Bind.bind(Control_Bind.bindArray);
var fromFoldable = /* #__PURE__ */ Foreign_Object.fromFoldable(Data_Foldable.foldableArray);
var render = /* #__PURE__ */ (function () {
    var toString = (function () {
        var $11 = Data_String_Common.joinWith("; ");
        var $12 = Foreign_Object.foldMap(Data_Monoid.monoidArray)(function (key) {
            return function (val) {
                return [ key + (": " + val) ];
            };
        });
        return function ($13) {
            return $11($12($13));
        };
    })();
    var rights = filterMap(Data_Either.hush);
    var property = function (v) {
        if (v instanceof CSS_Stylesheet.Property) {
            return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, v.value1));
        };
        return Data_Maybe.Nothing.value;
    };
    var rules = function (rs) {
        var properties = bind(filterMap(property)(rs))(function ($14) {
            return rights(CSS_Render.collect($14));
        });
        return fromFoldable(properties);
    };
    return function ($15) {
        return toString(rules(CSS_Stylesheet.runS($15)));
    };
})();
export {
    render
};
