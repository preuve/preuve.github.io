// Generated by purs version 0.15.9
import * as Deku_Attribute from "../Deku.Attribute/index.js";
var AriaRequired = /* #__PURE__ */ (function () {
    function AriaRequired() {

    };
    AriaRequired.value = new AriaRequired();
    return AriaRequired;
})();
var attrView_AriaRequiredStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-required",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrUse_AriaRequiredStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-required",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrTspan_AriaRequiredStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-required",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrText_AriaRequiredStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-required",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrTextPath_AriaRequired = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-required",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSymbol_AriaRequiredSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-required",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSvg_AriaRequiredStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-required",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrRect_AriaRequiredStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-required",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPolyline_AriaRequired = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-required",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPolygon_AriaRequiredS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-required",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPath_AriaRequiredStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-required",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrMarker_AriaRequiredSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-required",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrLine_AriaRequiredStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-required",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrG_AriaRequiredString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-required",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrForeignObject_AriaReq = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-required",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrEllipse_AriaRequiredS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-required",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrCircle_AriaRequiredSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-required",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrAriaRequiredUnit = {
    attr: function (v) {
        return function (v1) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-required",
                value: Deku_Attribute["unset$prime"]
            });
        };
    }
};
export {
    AriaRequired,
    attrCircle_AriaRequiredSt,
    attrEllipse_AriaRequiredS,
    attrForeignObject_AriaReq,
    attrG_AriaRequiredString,
    attrLine_AriaRequiredStri,
    attrMarker_AriaRequiredSt,
    attrPath_AriaRequiredStri,
    attrPolygon_AriaRequiredS,
    attrPolyline_AriaRequired,
    attrRect_AriaRequiredStri,
    attrSvg_AriaRequiredStrin,
    attrSymbol_AriaRequiredSt,
    attrText_AriaRequiredStri,
    attrTextPath_AriaRequired,
    attrTspan_AriaRequiredStr,
    attrUse_AriaRequiredStrin,
    attrView_AriaRequiredStri,
    attrAriaRequiredUnit
};
