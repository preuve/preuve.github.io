// Generated by purs version 0.15.9
import * as Deku_Attribute from "../Deku.Attribute/index.js";
var AriaValuemax = /* #__PURE__ */ (function () {
    function AriaValuemax() {

    };
    AriaValuemax.value = new AriaValuemax();
    return AriaValuemax;
})();
var attrView_AriaValuemaxStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-valuemax",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrUse_AriaValuemaxStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-valuemax",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrTspan_AriaValuemaxStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-valuemax",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrText_AriaValuemaxStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-valuemax",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrTextPath_AriaValuemax = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-valuemax",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSymbol_AriaValuemaxSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-valuemax",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSvg_AriaValuemaxStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-valuemax",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrRect_AriaValuemaxStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-valuemax",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPolyline_AriaValuemax = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-valuemax",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPolygon_AriaValuemaxS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-valuemax",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPath_AriaValuemaxStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-valuemax",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrMarker_AriaValuemaxSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-valuemax",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrLine_AriaValuemaxStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-valuemax",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrG_AriaValuemaxString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-valuemax",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrForeignObject_AriaVal = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-valuemax",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrEllipse_AriaValuemaxS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-valuemax",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrCircle_AriaValuemaxSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-valuemax",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrAriaValuemaxUnit = {
    attr: function (v) {
        return function (v1) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-valuemax",
                value: Deku_Attribute["unset$prime"]
            });
        };
    }
};
export {
    AriaValuemax,
    attrCircle_AriaValuemaxSt,
    attrEllipse_AriaValuemaxS,
    attrForeignObject_AriaVal,
    attrG_AriaValuemaxString,
    attrLine_AriaValuemaxStri,
    attrMarker_AriaValuemaxSt,
    attrPath_AriaValuemaxStri,
    attrPolygon_AriaValuemaxS,
    attrPolyline_AriaValuemax,
    attrRect_AriaValuemaxStri,
    attrSvg_AriaValuemaxStrin,
    attrSymbol_AriaValuemaxSt,
    attrText_AriaValuemaxStri,
    attrTextPath_AriaValuemax,
    attrTspan_AriaValuemaxStr,
    attrUse_AriaValuemaxStrin,
    attrView_AriaValuemaxStri,
    attrAriaValuemaxUnit
};
