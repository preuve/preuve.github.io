// Generated by purs version 0.15.9
import * as Deku_Attribute from "../Deku.Attribute/index.js";
var LightingColor = /* #__PURE__ */ (function () {
    function LightingColor() {

    };
    LightingColor.value = new LightingColor();
    return LightingColor;
})();
var attrSwitch_LightingColorS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "lighting-color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrLightingColorUnit = {
    attr: function (v) {
        return function (v1) {
            return Deku_Attribute.unsafeAttribute({
                key: "lighting-color",
                value: Deku_Attribute["unset$prime"]
            });
        };
    }
};
var attrImage_LightingColorSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "lighting-color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFilter_LightingColorS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "lighting-color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeTurbulence_Lighting = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "lighting-color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeTile_LightingColorS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "lighting-color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeSpecularLighting_Li = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "lighting-color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeOffset_LightingColo = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "lighting-color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeMorphology_Lighting = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "lighting-color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeMerge_LightingColor = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "lighting-color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeImage_LightingColor = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "lighting-color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeGaussianBlur_Lighti = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "lighting-color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeFlood_LightingColor = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "lighting-color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeDisplacementMap_Lig = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "lighting-color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeDiffuseLighting_Lig = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "lighting-color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeConvolveMatrix_Ligh = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "lighting-color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeComposite_LightingC = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "lighting-color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeComponentTransfer_L = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "lighting-color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeColorMatrix_Lightin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "lighting-color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeBlend_LightingColor = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "lighting-color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
export {
    LightingColor,
    attrFeBlend_LightingColor,
    attrFeColorMatrix_Lightin,
    attrFeComponentTransfer_L,
    attrFeComposite_LightingC,
    attrFeConvolveMatrix_Ligh,
    attrFeDiffuseLighting_Lig,
    attrFeDisplacementMap_Lig,
    attrFeFlood_LightingColor,
    attrFeGaussianBlur_Lighti,
    attrFeImage_LightingColor,
    attrFeMerge_LightingColor,
    attrFeMorphology_Lighting,
    attrFeOffset_LightingColo,
    attrFeSpecularLighting_Li,
    attrFeTile_LightingColorS,
    attrFeTurbulence_Lighting,
    attrFilter_LightingColorS,
    attrImage_LightingColorSt,
    attrSwitch_LightingColorS,
    attrLightingColorUnit
};
