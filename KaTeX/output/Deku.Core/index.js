// Generated by purs version 0.15.9
import * as Bolson_Control from "../Bolson.Control/index.js";
import * as Bolson_Core from "../Bolson.Core/index.js";
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Control_Monad_ST_Internal from "../Control.Monad.ST.Internal/index.js";
import * as Control_Plus from "../Control.Plus/index.js";
import * as Data_Eq from "../Data.Eq/index.js";
import * as Data_Foldable from "../Data.Foldable/index.js";
import * as Data_Functor from "../Data.Functor/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_Newtype from "../Data.Newtype/index.js";
import * as Data_Profunctor from "../Data.Profunctor/index.js";
import * as Data_Tuple from "../Data.Tuple/index.js";
import * as Data_Unit from "../Data.Unit/index.js";
import * as FRP_Event from "../FRP.Event/index.js";
import * as FRP_Event_VBus from "../FRP.Event.VBus/index.js";
import * as Safe_Coerce from "../Safe.Coerce/index.js";
var vbus = /* #__PURE__ */ FRP_Event_VBus.vbus();
var map = /* #__PURE__ */ Data_Functor.map(FRP_Event.functorEvent);
var lcmap = /* #__PURE__ */ Data_Profunctor.lcmap(Data_Profunctor.profunctorFn);
var unwrap = /* #__PURE__ */ Data_Newtype.unwrap();
var eq = /* #__PURE__ */ Data_Eq.eq(Bolson_Core.eqScope);
var coerce = /* #__PURE__ */ Safe_Coerce.coerce();
var pure = /* #__PURE__ */ Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST);
var pure1 = /* #__PURE__ */ Control_Applicative.pure(FRP_Event.applicativeEvent);
var empty = /* #__PURE__ */ Control_Plus.empty(FRP_Event.plusEvent);
var merge = /* #__PURE__ */ FRP_Event.merge(Data_Foldable.foldableArray);
var map1 = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorArray);
var ExEvent = function (x) {
    return x;
};
var DOMInterpret = function (x) {
    return x;
};
var NutF = function (x) {
    return x;
};
var Node = function (x) {
    return x;
};
var ExDOMInterpret = function (x) {
    return x;
};
var Child = function (x) {
    return x;
};
var Nut = function (x) {
    return x;
};
var ANut = function (x) {
    return x;
};
var newtypeNutF_ = {
    Coercible0: function () {
        return undefined;
    }
};
var newtypeDOMInterpret_ = {
    Coercible0: function () {
        return undefined;
    }
};
var vbussed = function () {
    return function (dictVBus) {
        var vbus1 = vbus(dictVBus);
        return function (px) {
            return function (f) {
                var go = vbus1(px)(f);
                var goo = map(function (v) {
                    return v;
                })(go);
                var gooo = map(function (v) {
                    return v;
                })(goo);
                return new Bolson_Core["EventfulElement$prime"](gooo);
            };
        };
    };
};
var vbussed1 = /* #__PURE__ */ vbussed();
var vbussedUncurried = function () {
    return function (dictVBus) {
        var vbussed2 = vbussed1(dictVBus);
        return function (px) {
            var $102 = vbussed2(px);
            return function ($103) {
                return $102(Data_Tuple.curry($103));
            };
        };
    };
};
var unsafeSetPos$prime = function (i) {
    return function (v) {
        var g = function (v1) {
            var f = function (ii) {
                if (ii instanceof Bolson_Core["Element$prime"]) {
                    return new Bolson_Core["Element$prime"](lcmap(function (v2) {
                        return {
                            pos: i,
                            dynFamily: v2.dynFamily,
                            ez: v2.ez,
                            parent: v2.parent,
                            raiseId: v2.raiseId,
                            scope: v2.scope
                        };
                    })(ii.value0));
                };
                if (ii instanceof Bolson_Core["EventfulElement$prime"]) {
                    return new Bolson_Core["EventfulElement$prime"](map(f)(ii.value0));
                };
                return ii;
            };
            return f(v1);
        };
        return g(v);
    };
};
var unsafeSetPos = function ($104) {
    return unsafeSetPos$prime(Data_Maybe.Just.create($104));
};
var sendToTop = /* #__PURE__ */ (function () {
    return new Bolson_Core.Logic(0);
})();
var sendToPos = function (i) {
    return new Bolson_Core.Logic(i);
};
var remove = /* #__PURE__ */ (function () {
    return Bolson_Core.Remove.value;
})();
var portalFlatten = function () {
    return {
        doLogic: function (pos) {
            return function (v) {
                return function (id) {
                    return v.sendToPos({
                        id: id,
                        pos: pos
                    });
                };
            };
        },
        ids: function ($105) {
            return (function (v) {
                return v.ids;
            })(unwrap($105));
        },
        disconnectElement: function (v) {
            return function (v1) {
                return v.disconnectElement({
                    id: v1.id,
                    scope: v1.scope,
                    parent: v1.parent,
                    scopeEq: eq
                });
            };
        },
        toElt: function (v) {
            return v;
        }
    };
};
var portalFlatten1 = /* #__PURE__ */ portalFlatten();
var insert_ = function (x) {
    var f = function (v) {
        return new Bolson_Core.Insert(v);
    };
    var b = unsafeSetPos$prime(Data_Maybe.Nothing.value)(x);
    return f((function (v) {
        return v;
    })(b));
};
var insert = function (i) {
    return function (x) {
        var f = function (v) {
            return new Bolson_Core.Insert(v);
        };
        var b = unsafeSetPos(i)(x);
        return f((function (v) {
            return v;
        })(b));
    };
};
var bus = function (f) {
    return FRP_Event.bus(f);
};
var busUncurried = function ($106) {
    return bus(Data_Tuple.curry($106));
};
var bussed = function (f) {
    var z = function (x) {
        return new Bolson_Core["EventfulElement$prime"](coerce(x));
    };
    var g = bus(f);
    return z(map(function (v) {
        return v;
    })(g));
};
var bussedUncurried = function ($107) {
    return bussed(Data_Tuple.curry($107));
};
var __internalDekuFlatten = function (a) {
    return function (b) {
        return function (c) {
            return Bolson_Control.flatten(portalFlatten1)(a)(b)((function (v) {
                return v;
            })(c));
        };
    };
};
var dynify = function (f) {
    return function (es) {
        var go = function (fes) {
            return function (v) {
                return function (v1) {
                    return FRP_Event.makeLemmingEventO(function (v2, k) {
                        var me = v1.ids();
                        v.raiseId(me)();
                        var v3 = (function () {
                            if (v.parent instanceof Data_Maybe.Nothing) {
                                var dummyParent = v1.ids();
                                return new Data_Tuple.Tuple(pure1(v1.makeElement({
                                    id: dummyParent,
                                    parent: Data_Maybe.Nothing.value,
                                    scope: v.scope,
                                    tag: "div",
                                    pos: Data_Maybe.Nothing.value,
                                    dynFamily: Data_Maybe.Nothing.value
                                })), dummyParent);
                            };
                            if (v.parent instanceof Data_Maybe.Just) {
                                return new Data_Tuple.Tuple(empty, v.parent.value0);
                            };
                            throw new Error("Failed pattern match at Deku.Core (line 451, column 38 - line 467, column 40): " + [ v.parent.constructor.name ]);
                        })();
                        var unsub = v2(merge([ v3.value0, pure1(v1.makeDynBeacon({
                            id: me,
                            parent: new Data_Maybe.Just(v3.value1),
                            scope: v.scope,
                            dynFamily: v.dynFamily,
                            pos: v.pos
                        })), pure1(v1.attributeParent({
                            id: me,
                            parent: v3.value1,
                            pos: v.pos,
                            dynFamily: v.dynFamily,
                            ez: v.ez
                        })), __internalDekuFlatten({
                            parent: new Data_Maybe.Just(v3.value1),
                            scope: v.scope,
                            ez: false,
                            raiseId: function (v4) {
                                return pure(Data_Unit.unit);
                            },
                            pos: Data_Maybe.Nothing.value,
                            dynFamily: new Data_Maybe.Just(me)
                        })(v1)(fes) ]), k);
                        return function __do() {
                            k(v1.removeDynBeacon({
                                id: me
                            }));
                            return unsub();
                        };
                    });
                };
            };
        };
        var go$prime = function (x) {
            return new Bolson_Core["Element$prime"](go(x));
        };
        return go$prime((function (v) {
            return v;
        })(f(es)));
    };
};
var dyn = /* #__PURE__ */ (function () {
    var myDyn$prime = function (x) {
        return Bolson_Core.dyn(x);
    };
    var myDyn = function (e) {
        return myDyn$prime(map(map(function (v) {
            return v;
        }))(e));
    };
    return dynify(myDyn);
})();
var envy = /* #__PURE__ */ (function () {
    var myEnvy$prime = function (x) {
        return Bolson_Core.envy(map(function (v) {
            return v;
        })(x));
    };
    var myEnvy = function (e) {
        return myEnvy$prime(map(function (v) {
            return v;
        })(e));
    };
    return dynify(myEnvy);
})();
var fixed = /* #__PURE__ */ (function () {
    var myFixed$prime = function (x) {
        return Bolson_Core.fixed(map1(function (v) {
            return v;
        })(x));
    };
    var myFixed = function (e) {
        return myFixed$prime(map1(function (v) {
            return v;
        })(e));
    };
    return dynify(myFixed);
})();
var semigroupNut = {
    append: function (a) {
        return function (b) {
            return fixed([ a, b ]);
        };
    }
};
var monoidNut = {
    mempty: /* #__PURE__ */ Bolson_Core.envy(empty),
    Semigroup0: function () {
        return semigroupNut;
    }
};
export {
    ANut,
    DOMInterpret,
    Node,
    Nut,
    NutF,
    Child,
    bus,
    busUncurried,
    bussed,
    bussedUncurried,
    vbussed,
    vbussedUncurried,
    insert,
    insert_,
    remove,
    sendToPos,
    sendToTop,
    dyn,
    fixed,
    envy,
    unsafeSetPos,
    newtypeNutF_,
    semigroupNut,
    monoidNut,
    newtypeDOMInterpret_
};
