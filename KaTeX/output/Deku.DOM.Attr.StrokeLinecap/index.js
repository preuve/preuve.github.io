// Generated by purs version 0.15.9
import * as Deku_Attribute from "../Deku.Attribute/index.js";
var StrokeLinecap = /* #__PURE__ */ (function () {
    function StrokeLinecap() {

    };
    StrokeLinecap.value = new StrokeLinecap();
    return StrokeLinecap;
})();
var attrUse_StrokeLinecapStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrTspan_StrokeLinecapSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrText_StrokeLinecapStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrTextPath_StrokeLineca = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSymbol_StrokeLinecapS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSwitch_StrokeLinecapS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSvg_StrokeLinecapStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrStrokeLinecapUnit = {
    attr: function (v) {
        return function (v1) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["unset$prime"]
            });
        };
    }
};
var attrRect_StrokeLinecapStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrRadialGradient_Stroke = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPolyline_StrokeLineca = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPolygon_StrokeLinecap = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPattern_StrokeLinecap = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPath_StrokeLinecapStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrMask_StrokeLinecapStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrMarker_StrokeLinecapS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrLinearGradient_Stroke = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrLine_StrokeLinecapStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrImage_StrokeLinecapSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrG_StrokeLinecapString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrForeignObject_StrokeL = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFilter_StrokeLinecapS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeTurbulence_StrokeLi = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeTile_StrokeLinecapS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeSpecularLighting_St = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeOffset_StrokeLineca = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeMorphology_StrokeLi = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeMerge_StrokeLinecap = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeImage_StrokeLinecap = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeGaussianBlur_Stroke = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeFlood_StrokeLinecap = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeDisplacementMap_Str = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeDiffuseLighting_Str = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeConvolveMatrix_Stro = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeComposite_StrokeLin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeComponentTransfer_S = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeColorMatrix_StrokeL = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeBlend_StrokeLinecap = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrEllipse_StrokeLinecap = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrDefs_StrokeLinecapStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrClipPath_StrokeLineca = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrCircle_StrokeLinecapS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "stroke-linecap",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
export {
    StrokeLinecap,
    attrCircle_StrokeLinecapS,
    attrClipPath_StrokeLineca,
    attrDefs_StrokeLinecapStr,
    attrEllipse_StrokeLinecap,
    attrFeBlend_StrokeLinecap,
    attrFeColorMatrix_StrokeL,
    attrFeComponentTransfer_S,
    attrFeComposite_StrokeLin,
    attrFeConvolveMatrix_Stro,
    attrFeDiffuseLighting_Str,
    attrFeDisplacementMap_Str,
    attrFeFlood_StrokeLinecap,
    attrFeGaussianBlur_Stroke,
    attrFeImage_StrokeLinecap,
    attrFeMerge_StrokeLinecap,
    attrFeMorphology_StrokeLi,
    attrFeOffset_StrokeLineca,
    attrFeSpecularLighting_St,
    attrFeTile_StrokeLinecapS,
    attrFeTurbulence_StrokeLi,
    attrFilter_StrokeLinecapS,
    attrForeignObject_StrokeL,
    attrG_StrokeLinecapString,
    attrImage_StrokeLinecapSt,
    attrLine_StrokeLinecapStr,
    attrLinearGradient_Stroke,
    attrMarker_StrokeLinecapS,
    attrMask_StrokeLinecapStr,
    attrPath_StrokeLinecapStr,
    attrPattern_StrokeLinecap,
    attrPolygon_StrokeLinecap,
    attrPolyline_StrokeLineca,
    attrRadialGradient_Stroke,
    attrRect_StrokeLinecapStr,
    attrSvg_StrokeLinecapStri,
    attrSwitch_StrokeLinecapS,
    attrSymbol_StrokeLinecapS,
    attrText_StrokeLinecapStr,
    attrTextPath_StrokeLineca,
    attrTspan_StrokeLinecapSt,
    attrUse_StrokeLinecapStri,
    attrStrokeLinecapUnit
};
