// Generated by purs version 0.15.9
import * as Deku_Attribute from "../Deku.Attribute/index.js";
var Color = /* #__PURE__ */ (function () {
    function Color() {

    };
    Color.value = new Color();
    return Color;
})();
var attrUse_ColorString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrTspan_ColorString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrText_ColorString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrTextPath_ColorString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSymbol_ColorString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSwitch_ColorString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSvg_ColorString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrStop_ColorString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrRect_ColorString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrRadialGradient_ColorS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPolyline_ColorString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPolygon_ColorString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPattern_ColorString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPath_ColorString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrMask_ColorString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrMarker_ColorString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrLinearGradient_ColorS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrLine_ColorString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrImage_ColorString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrHr_ColorString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrG_ColorString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrForeignObject_ColorSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFont_ColorString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFilter_ColorString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeTurbulence_ColorStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeTile_ColorString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeSpecularLighting_Co = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeOffset_ColorString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeMorphology_ColorStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeMerge_ColorString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeImage_ColorString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeGaussianBlur_ColorS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeFlood_ColorString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeDisplacementMap_Col = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeDiffuseLighting_Col = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeConvolveMatrix_Colo = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeComposite_ColorStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeComponentTransfer_C = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeColorMatrix_ColorSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeBlend_ColorString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrEllipse_ColorString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrDefs_ColorString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrColorUnit = {
    attr: function (v) {
        return function (v1) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["unset$prime"]
            });
        };
    }
};
var attrClipPath_ColorString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrCircle_ColorString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "color",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
export {
    Color,
    attrFont_ColorString,
    attrHr_ColorString,
    attrCircle_ColorString,
    attrClipPath_ColorString,
    attrDefs_ColorString,
    attrEllipse_ColorString,
    attrFeBlend_ColorString,
    attrFeColorMatrix_ColorSt,
    attrFeComponentTransfer_C,
    attrFeComposite_ColorStri,
    attrFeConvolveMatrix_Colo,
    attrFeDiffuseLighting_Col,
    attrFeDisplacementMap_Col,
    attrFeFlood_ColorString,
    attrFeGaussianBlur_ColorS,
    attrFeImage_ColorString,
    attrFeMerge_ColorString,
    attrFeMorphology_ColorStr,
    attrFeOffset_ColorString,
    attrFeSpecularLighting_Co,
    attrFeTile_ColorString,
    attrFeTurbulence_ColorStr,
    attrFilter_ColorString,
    attrForeignObject_ColorSt,
    attrG_ColorString,
    attrImage_ColorString,
    attrLine_ColorString,
    attrLinearGradient_ColorS,
    attrMarker_ColorString,
    attrMask_ColorString,
    attrPath_ColorString,
    attrPattern_ColorString,
    attrPolygon_ColorString,
    attrPolyline_ColorString,
    attrRadialGradient_ColorS,
    attrRect_ColorString,
    attrStop_ColorString,
    attrSvg_ColorString,
    attrSwitch_ColorString,
    attrSymbol_ColorString,
    attrText_ColorString,
    attrTextPath_ColorString,
    attrTspan_ColorString,
    attrUse_ColorString,
    attrColorUnit
};
