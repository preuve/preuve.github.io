// Generated by purs version 0.15.9
import * as Deku_Attribute from "../Deku.Attribute/index.js";
var AriaColcount = /* #__PURE__ */ (function () {
    function AriaColcount() {

    };
    AriaColcount.value = new AriaColcount();
    return AriaColcount;
})();
var attrView_AriaColcountStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-colcount",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrUse_AriaColcountStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-colcount",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrTspan_AriaColcountStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-colcount",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrText_AriaColcountStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-colcount",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrTextPath_AriaColcount = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-colcount",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSymbol_AriaColcountSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-colcount",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSvg_AriaColcountStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-colcount",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrRect_AriaColcountStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-colcount",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPolyline_AriaColcount = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-colcount",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPolygon_AriaColcountS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-colcount",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPath_AriaColcountStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-colcount",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrMarker_AriaColcountSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-colcount",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrLine_AriaColcountStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-colcount",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrG_AriaColcountString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-colcount",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrForeignObject_AriaCol = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-colcount",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrEllipse_AriaColcountS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-colcount",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrCircle_AriaColcountSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-colcount",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrAriaColcountUnit = {
    attr: function (v) {
        return function (v1) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-colcount",
                value: Deku_Attribute["unset$prime"]
            });
        };
    }
};
export {
    AriaColcount,
    attrCircle_AriaColcountSt,
    attrEllipse_AriaColcountS,
    attrForeignObject_AriaCol,
    attrG_AriaColcountString,
    attrLine_AriaColcountStri,
    attrMarker_AriaColcountSt,
    attrPath_AriaColcountStri,
    attrPolygon_AriaColcountS,
    attrPolyline_AriaColcount,
    attrRect_AriaColcountStri,
    attrSvg_AriaColcountStrin,
    attrSymbol_AriaColcountSt,
    attrText_AriaColcountStri,
    attrTextPath_AriaColcount,
    attrTspan_AriaColcountStr,
    attrUse_AriaColcountStrin,
    attrView_AriaColcountStri,
    attrAriaColcountUnit
};
