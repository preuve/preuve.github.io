// Generated by purs version 0.15.9
import * as Deku_Attribute from "../Deku.Attribute/index.js";
var Transform = /* #__PURE__ */ (function () {
    function Transform() {

    };
    Transform.value = new Transform();
    return Transform;
})();
var attrUse_TransformString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrTspan_TransformString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrTransformUnit = {
    attr: function (v) {
        return function (v1) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["unset$prime"]
            });
        };
    }
};
var attrText_TransformString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrTextPath_TransformStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSymbol_TransformStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSwitch_TransformStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSvg_TransformString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrRect_TransformString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrRadialGradient_Transf = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPolyline_TransformStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPolygon_TransformStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPattern_TransformStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPath_TransformString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrMask_TransformString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrMarker_TransformStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrLinearGradient_Transf = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrLine_TransformString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrImage_TransformString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrG_TransformString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrForeignObject_Transfo = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFilter_TransformStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeTurbulence_Transfor = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeTile_TransformStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeSpecularLighting_Tr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeOffset_TransformStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeMorphology_Transfor = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeMerge_TransformStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeImage_TransformStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeGaussianBlur_Transf = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeFlood_TransformStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeDisplacementMap_Tra = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeDiffuseLighting_Tra = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeConvolveMatrix_Tran = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeComposite_Transform = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeComponentTransfer_T = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeColorMatrix_Transfo = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeBlend_TransformStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrEllipse_TransformStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrDefs_TransformString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrClipPath_TransformStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrCircle_TransformStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "transform",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
export {
    Transform,
    attrCircle_TransformStrin,
    attrClipPath_TransformStr,
    attrDefs_TransformString,
    attrEllipse_TransformStri,
    attrFeBlend_TransformStri,
    attrFeColorMatrix_Transfo,
    attrFeComponentTransfer_T,
    attrFeComposite_Transform,
    attrFeConvolveMatrix_Tran,
    attrFeDiffuseLighting_Tra,
    attrFeDisplacementMap_Tra,
    attrFeFlood_TransformStri,
    attrFeGaussianBlur_Transf,
    attrFeImage_TransformStri,
    attrFeMerge_TransformStri,
    attrFeMorphology_Transfor,
    attrFeOffset_TransformStr,
    attrFeSpecularLighting_Tr,
    attrFeTile_TransformStrin,
    attrFeTurbulence_Transfor,
    attrFilter_TransformStrin,
    attrForeignObject_Transfo,
    attrG_TransformString,
    attrImage_TransformString,
    attrLine_TransformString,
    attrLinearGradient_Transf,
    attrMarker_TransformStrin,
    attrMask_TransformString,
    attrPath_TransformString,
    attrPattern_TransformStri,
    attrPolygon_TransformStri,
    attrPolyline_TransformStr,
    attrRadialGradient_Transf,
    attrRect_TransformString,
    attrSvg_TransformString,
    attrSwitch_TransformStrin,
    attrSymbol_TransformStrin,
    attrText_TransformString,
    attrTextPath_TransformStr,
    attrTspan_TransformString,
    attrUse_TransformString,
    attrTransformUnit
};
