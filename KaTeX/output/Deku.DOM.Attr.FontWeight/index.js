// Generated by purs version 0.15.9
import * as Deku_Attribute from "../Deku.Attribute/index.js";
var FontWeight = /* #__PURE__ */ (function () {
    function FontWeight() {

    };
    FontWeight.value = new FontWeight();
    return FontWeight;
})();
var attrTspan_FontWeightStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-weight",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrText_FontWeightString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-weight",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSwitch_FontWeightStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-weight",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrImage_FontWeightStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-weight",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFontWeightUnit = {
    attr: function (v) {
        return function (v1) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-weight",
                value: Deku_Attribute["unset$prime"]
            });
        };
    }
};
var attrFilter_FontWeightStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-weight",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeTurbulence_FontWeig = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-weight",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeTile_FontWeightStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-weight",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeSpecularLighting_Fo = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-weight",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeOffset_FontWeightSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-weight",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeMorphology_FontWeig = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-weight",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeMerge_FontWeightStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-weight",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeImage_FontWeightStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-weight",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeGaussianBlur_FontWe = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-weight",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeFlood_FontWeightStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-weight",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeDisplacementMap_Fon = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-weight",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeDiffuseLighting_Fon = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-weight",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeConvolveMatrix_Font = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-weight",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeComposite_FontWeigh = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-weight",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeComponentTransfer_F = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-weight",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeColorMatrix_FontWei = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-weight",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeBlend_FontWeightStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "font-weight",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
export {
    FontWeight,
    attrFeBlend_FontWeightStr,
    attrFeColorMatrix_FontWei,
    attrFeComponentTransfer_F,
    attrFeComposite_FontWeigh,
    attrFeConvolveMatrix_Font,
    attrFeDiffuseLighting_Fon,
    attrFeDisplacementMap_Fon,
    attrFeFlood_FontWeightStr,
    attrFeGaussianBlur_FontWe,
    attrFeImage_FontWeightStr,
    attrFeMerge_FontWeightStr,
    attrFeMorphology_FontWeig,
    attrFeOffset_FontWeightSt,
    attrFeSpecularLighting_Fo,
    attrFeTile_FontWeightStri,
    attrFeTurbulence_FontWeig,
    attrFilter_FontWeightStri,
    attrImage_FontWeightStrin,
    attrSwitch_FontWeightStri,
    attrText_FontWeightString,
    attrTspan_FontWeightStrin,
    attrFontWeightUnit
};
