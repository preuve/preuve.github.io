// Generated by purs version 0.15.9
import * as Deku_Attribute from "../Deku.Attribute/index.js";
var XmlSpace = /* #__PURE__ */ (function () {
    function XmlSpace() {

    };
    XmlSpace.value = new XmlSpace();
    return XmlSpace;
})();
var attrXmlSpaceUnit = {
    attr: function (v) {
        return function (v1) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:space",
                value: Deku_Attribute["unset$prime"]
            });
        };
    }
};
var attrView_XmlSpaceString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:space",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSwitch_XmlSpaceString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:space",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrMpath_XmlSpaceString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:space",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrMetadata_XmlSpaceStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:space",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrImage_XmlSpaceString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:space",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFilter_XmlSpaceString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:space",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeTurbulence_XmlSpace = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:space",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeTile_XmlSpaceString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:space",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeSpotLight_XmlSpaceS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:space",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeSpecularLighting_Xm = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:space",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFePointLight_XmlSpace = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:space",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeOffset_XmlSpaceStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:space",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeMorphology_XmlSpace = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:space",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeMerge_XmlSpaceStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:space",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeMergeNode_XmlSpaceS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:space",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeImage_XmlSpaceStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:space",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeGaussianBlur_XmlSpa = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:space",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeFuncR_XmlSpaceStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:space",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeFuncG_XmlSpaceStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:space",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeFuncB_XmlSpaceStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:space",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeFuncA_XmlSpaceStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:space",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeFlood_XmlSpaceStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:space",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeDistantLight_XmlSpa = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:space",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeDisplacementMap_Xml = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:space",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeDiffuseLighting_Xml = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:space",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeConvolveMatrix_XmlS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:space",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeComposite_XmlSpaceS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:space",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeComponentTransfer_X = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:space",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeColorMatrix_XmlSpac = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:space",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeBlend_XmlSpaceStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:space",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrDiscard_XmlSpaceStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:space",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrAnimateTransform_XmlS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "xml:space",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
export {
    XmlSpace,
    attrAnimateTransform_XmlS,
    attrDiscard_XmlSpaceStrin,
    attrFeBlend_XmlSpaceStrin,
    attrFeColorMatrix_XmlSpac,
    attrFeComponentTransfer_X,
    attrFeComposite_XmlSpaceS,
    attrFeConvolveMatrix_XmlS,
    attrFeDiffuseLighting_Xml,
    attrFeDisplacementMap_Xml,
    attrFeDistantLight_XmlSpa,
    attrFeFlood_XmlSpaceStrin,
    attrFeFuncA_XmlSpaceStrin,
    attrFeFuncB_XmlSpaceStrin,
    attrFeFuncG_XmlSpaceStrin,
    attrFeFuncR_XmlSpaceStrin,
    attrFeGaussianBlur_XmlSpa,
    attrFeImage_XmlSpaceStrin,
    attrFeMerge_XmlSpaceStrin,
    attrFeMergeNode_XmlSpaceS,
    attrFeMorphology_XmlSpace,
    attrFeOffset_XmlSpaceStri,
    attrFePointLight_XmlSpace,
    attrFeSpecularLighting_Xm,
    attrFeSpotLight_XmlSpaceS,
    attrFeTile_XmlSpaceString,
    attrFeTurbulence_XmlSpace,
    attrFilter_XmlSpaceString,
    attrImage_XmlSpaceString,
    attrMetadata_XmlSpaceStri,
    attrMpath_XmlSpaceString,
    attrSwitch_XmlSpaceString,
    attrView_XmlSpaceString,
    attrXmlSpaceUnit
};
