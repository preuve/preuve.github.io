// Generated by purs version 0.15.9
import * as Deku_Attribute from "../Deku.Attribute/index.js";
var Challenge = /* #__PURE__ */ (function () {
    function Challenge() {

    };
    Challenge.value = new Challenge();
    return Challenge;
})();
var attrXdata_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrWbr_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrVideo_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrVar_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrUl_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrU_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrTt_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrTrack_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrTr_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrTitle_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrTime_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrThead_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrTh_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrTfoot_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrTextarea_ChallengeStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrTemplate_ChallengeStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrTd_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrTbody_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrTable_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSvg_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSup_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSummary_ChallengeStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSub_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrStyle_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrStrong_ChallengeStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrStrike_ChallengeStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSpan_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSource_ChallengeStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSmall_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSelect_ChallengeStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSection_ChallengeStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrScript_ChallengeStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSamp_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrS_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrRuby_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrRt_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrRp_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrQ_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrProgress_ChallengeStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPre_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPicture_ChallengeStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrParam_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrP_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrOutput_ChallengeStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrOption_ChallengeStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrOptgroup_ChallengeStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrOl_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrObject_ChallengeStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrNoscript_ChallengeStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrNoframes_ChallengeStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrNav_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrMeter_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrMeta_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrMark_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrMap_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrMain_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrLink_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrLi_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrLegend_ChallengeStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrLabel_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrKbd_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrIns_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrInput_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrImg_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrIframe_ChallengeStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrI_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrHtml_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrHr_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrHeader_ChallengeStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrHead_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrH6_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrH5_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrH4_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrH3_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrH2_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrH1_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFrameset_ChallengeStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFrame_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrForm_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFooter_ChallengeStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFont_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFigure_ChallengeStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFigcaption_ChallengeS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFieldset_ChallengeStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrEmbed_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrEm_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrDt_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrDl_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrDiv_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrDir_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrDialog_ChallengeStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrDfn_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrDetails_ChallengeStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrDel_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrDd_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrDatalist_ChallengeStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrColgroup_ChallengeStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrCol_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrCode_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrCite_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrChallengeUnit = {
    attr: function (v) {
        return function (v1) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["unset$prime"]
            });
        };
    }
};
var attrCenter_ChallengeStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrCaption_ChallengeStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrCanvas_ChallengeStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrButton_ChallengeStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrBr_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrBody_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrBlockquote_ChallengeS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrBig_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrBdo_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrBdi_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrBasefont_ChallengeStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrBase_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrB_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrAudio_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrAside_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrArticle_ChallengeStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrArea_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrApplet_ChallengeStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrAddress_ChallengeStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrAcronym_ChallengeStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrAbbr_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrA_ChallengeString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "challenge",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
export {
    Challenge,
    attrA_ChallengeString,
    attrAbbr_ChallengeString,
    attrAcronym_ChallengeStri,
    attrAddress_ChallengeStri,
    attrApplet_ChallengeStrin,
    attrArea_ChallengeString,
    attrArticle_ChallengeStri,
    attrAside_ChallengeString,
    attrAudio_ChallengeString,
    attrB_ChallengeString,
    attrBase_ChallengeString,
    attrBasefont_ChallengeStr,
    attrBdi_ChallengeString,
    attrBdo_ChallengeString,
    attrBig_ChallengeString,
    attrBlockquote_ChallengeS,
    attrBody_ChallengeString,
    attrBr_ChallengeString,
    attrButton_ChallengeStrin,
    attrCanvas_ChallengeStrin,
    attrCaption_ChallengeStri,
    attrCenter_ChallengeStrin,
    attrCite_ChallengeString,
    attrCode_ChallengeString,
    attrCol_ChallengeString,
    attrColgroup_ChallengeStr,
    attrXdata_ChallengeString,
    attrDatalist_ChallengeStr,
    attrDd_ChallengeString,
    attrDel_ChallengeString,
    attrDetails_ChallengeStri,
    attrDfn_ChallengeString,
    attrDialog_ChallengeStrin,
    attrDir_ChallengeString,
    attrDiv_ChallengeString,
    attrDl_ChallengeString,
    attrDt_ChallengeString,
    attrEm_ChallengeString,
    attrEmbed_ChallengeString,
    attrFieldset_ChallengeStr,
    attrFigcaption_ChallengeS,
    attrFigure_ChallengeStrin,
    attrFont_ChallengeString,
    attrFooter_ChallengeStrin,
    attrForm_ChallengeString,
    attrFrame_ChallengeString,
    attrFrameset_ChallengeStr,
    attrH1_ChallengeString,
    attrH2_ChallengeString,
    attrH3_ChallengeString,
    attrH4_ChallengeString,
    attrH5_ChallengeString,
    attrH6_ChallengeString,
    attrHead_ChallengeString,
    attrHeader_ChallengeStrin,
    attrHr_ChallengeString,
    attrHtml_ChallengeString,
    attrI_ChallengeString,
    attrIframe_ChallengeStrin,
    attrImg_ChallengeString,
    attrInput_ChallengeString,
    attrIns_ChallengeString,
    attrKbd_ChallengeString,
    attrLabel_ChallengeString,
    attrLegend_ChallengeStrin,
    attrLi_ChallengeString,
    attrLink_ChallengeString,
    attrMain_ChallengeString,
    attrMap_ChallengeString,
    attrMark_ChallengeString,
    attrMeta_ChallengeString,
    attrMeter_ChallengeString,
    attrNav_ChallengeString,
    attrNoframes_ChallengeStr,
    attrNoscript_ChallengeStr,
    attrObject_ChallengeStrin,
    attrOl_ChallengeString,
    attrOptgroup_ChallengeStr,
    attrOption_ChallengeStrin,
    attrOutput_ChallengeStrin,
    attrP_ChallengeString,
    attrParam_ChallengeString,
    attrPicture_ChallengeStri,
    attrPre_ChallengeString,
    attrProgress_ChallengeStr,
    attrQ_ChallengeString,
    attrRp_ChallengeString,
    attrRt_ChallengeString,
    attrRuby_ChallengeString,
    attrS_ChallengeString,
    attrSamp_ChallengeString,
    attrScript_ChallengeStrin,
    attrSection_ChallengeStri,
    attrSelect_ChallengeStrin,
    attrSmall_ChallengeString,
    attrSource_ChallengeStrin,
    attrSpan_ChallengeString,
    attrStrike_ChallengeStrin,
    attrStrong_ChallengeStrin,
    attrStyle_ChallengeString,
    attrSub_ChallengeString,
    attrSummary_ChallengeStri,
    attrSup_ChallengeString,
    attrSvg_ChallengeString,
    attrTable_ChallengeString,
    attrTbody_ChallengeString,
    attrTd_ChallengeString,
    attrTemplate_ChallengeStr,
    attrTextarea_ChallengeStr,
    attrTfoot_ChallengeString,
    attrTh_ChallengeString,
    attrThead_ChallengeString,
    attrTime_ChallengeString,
    attrTitle_ChallengeString,
    attrTr_ChallengeString,
    attrTrack_ChallengeString,
    attrTt_ChallengeString,
    attrU_ChallengeString,
    attrUl_ChallengeString,
    attrVar_ChallengeString,
    attrVideo_ChallengeString,
    attrWbr_ChallengeString,
    attrChallengeUnit
};
