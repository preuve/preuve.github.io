// Generated by purs version 0.15.9
import * as Control_Monad from "../Control.Monad/index.js";
import * as Data_Functor from "../Data.Functor/index.js";
import * as Data_Unit from "../Data.Unit/index.js";
import * as Effect from "../Effect/index.js";
import * as Effect_Ref from "../Effect.Ref/index.js";
import * as FRP_Event from "../FRP.Event/index.js";
import * as Web_HTML from "../Web.HTML/index.js";
import * as Web_HTML_Window from "../Web.HTML.Window/index.js";
var $runtime_lazy = function (name, moduleName, init) {
    var state = 0;
    var val;
    return function (lineNumber) {
        if (state === 2) return val;
        if (state === 1) throw new ReferenceError(name + " was needed before it finished initializing (module " + moduleName + ", line " + lineNumber + ")", moduleName, lineNumber);
        state = 1;
        val = init();
        state = 2;
        return val;
    };
};
var $$void = /* #__PURE__ */ Data_Functor["void"](Effect.functorEffect);
var unlessM = /* #__PURE__ */ Control_Monad.unlessM(Effect.monadEffect);
var animationFrame = /* #__PURE__ */ FRP_Event.makeEvent(function (k) {
    return function __do() {
        var w = Web_HTML.window();
        var cancelled = Effect_Ref["new"](false)();
        var $lazy_loop = $runtime_lazy("loop", "FRP.Event.AnimationFrame", function () {
            return $$void(Web_HTML_Window.requestAnimationFrame(function __do() {
                k(Data_Unit.unit)();
                return unlessM(Effect_Ref.read(cancelled))($lazy_loop(20))();
            })(w));
        });
        var loop = $lazy_loop(17);
        loop();
        return Effect_Ref.write(true)(cancelled);
    };
});
export {
    animationFrame
};
