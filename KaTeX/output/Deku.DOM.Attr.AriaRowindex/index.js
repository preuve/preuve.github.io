// Generated by purs version 0.15.9
import * as Deku_Attribute from "../Deku.Attribute/index.js";
var AriaRowindex = /* #__PURE__ */ (function () {
    function AriaRowindex() {

    };
    AriaRowindex.value = new AriaRowindex();
    return AriaRowindex;
})();
var attrView_AriaRowindexStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-rowindex",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrUse_AriaRowindexStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-rowindex",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrTspan_AriaRowindexStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-rowindex",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrText_AriaRowindexStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-rowindex",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrTextPath_AriaRowindex = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-rowindex",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSymbol_AriaRowindexSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-rowindex",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrSvg_AriaRowindexStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-rowindex",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrRect_AriaRowindexStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-rowindex",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPolyline_AriaRowindex = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-rowindex",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPolygon_AriaRowindexS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-rowindex",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrPath_AriaRowindexStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-rowindex",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrMarker_AriaRowindexSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-rowindex",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrLine_AriaRowindexStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-rowindex",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrG_AriaRowindexString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-rowindex",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrForeignObject_AriaRow = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-rowindex",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrEllipse_AriaRowindexS = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-rowindex",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrCircle_AriaRowindexSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-rowindex",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrAriaRowindexUnit = {
    attr: function (v) {
        return function (v1) {
            return Deku_Attribute.unsafeAttribute({
                key: "aria-rowindex",
                value: Deku_Attribute["unset$prime"]
            });
        };
    }
};
export {
    AriaRowindex,
    attrCircle_AriaRowindexSt,
    attrEllipse_AriaRowindexS,
    attrForeignObject_AriaRow,
    attrG_AriaRowindexString,
    attrLine_AriaRowindexStri,
    attrMarker_AriaRowindexSt,
    attrPath_AriaRowindexStri,
    attrPolygon_AriaRowindexS,
    attrPolyline_AriaRowindex,
    attrRect_AriaRowindexStri,
    attrSvg_AriaRowindexStrin,
    attrSymbol_AriaRowindexSt,
    attrText_AriaRowindexStri,
    attrTextPath_AriaRowindex,
    attrTspan_AriaRowindexStr,
    attrUse_AriaRowindexStrin,
    attrView_AriaRowindexStri,
    attrAriaRowindexUnit
};
