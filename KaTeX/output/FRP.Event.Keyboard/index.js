// Generated by purs version 0.15.9
import * as Data_Foldable from "../Data.Foldable/index.js";
import * as Data_Functor from "../Data.Functor/index.js";
import * as Data_Newtype from "../Data.Newtype/index.js";
import * as Data_Ord from "../Data.Ord/index.js";
import * as Data_Set from "../Data.Set/index.js";
import * as Effect from "../Effect/index.js";
import * as Effect_Ref from "../Effect.Ref/index.js";
import * as FRP_Event from "../FRP.Event/index.js";
import * as Web_Event_EventTarget from "../Web.Event.EventTarget/index.js";
import * as Web_HTML from "../Web.HTML/index.js";
import * as Web_HTML_Window from "../Web.HTML.Window/index.js";
import * as Web_UIEvent_KeyboardEvent from "../Web.UIEvent.KeyboardEvent/index.js";
var map = /* #__PURE__ */ Data_Functor.map(Effect.functorEffect);
var traverse_ = /* #__PURE__ */ Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe);
var wrap = /* #__PURE__ */ Data_Newtype.wrap();
var insert = /* #__PURE__ */ Data_Set.insert(Data_Ord.ordString);
var $$delete = /* #__PURE__ */ Data_Set["delete"](Data_Ord.ordString);
var Keyboard = function (x) {
    return x;
};
var withKeys = function (v) {
    return function (e) {
        return FRP_Event.makeEvent(function (k) {
            return FRP_Event.subscribe(e)(function (value) {
                return function __do() {
                    var keysValue = Effect_Ref.read(v.keys)();
                    return k({
                        value: value,
                        keys: keysValue
                    })();
                };
            });
        });
    };
};
var up = /* #__PURE__ */ FRP_Event.makeEvent(function (k) {
    return function __do() {
        var target = map(Web_HTML_Window.toEventTarget)(Web_HTML.window)();
        var keyUpListener = Web_Event_EventTarget.eventListener(function (e) {
            return traverse_(function (ke) {
                return k(Web_UIEvent_KeyboardEvent.code(ke));
            })(Web_UIEvent_KeyboardEvent.fromEvent(e));
        })();
        Web_Event_EventTarget.addEventListener(wrap("keyup"))(keyUpListener)(false)(target)();
        return Web_Event_EventTarget.removeEventListener(wrap("keyup"))(keyUpListener)(false)(target);
    };
});
var getKeyboard = function __do() {
    var keys = Effect_Ref["new"](Data_Set.empty)();
    var target = map(Web_HTML_Window.toEventTarget)(Web_HTML.window)();
    var keyDownListener = Web_Event_EventTarget.eventListener(function (e) {
        return traverse_(function (ke) {
            return Effect_Ref.modify(insert(Web_UIEvent_KeyboardEvent.code(ke)))(keys);
        })(Web_UIEvent_KeyboardEvent.fromEvent(e));
    })();
    var keyUpListener = Web_Event_EventTarget.eventListener(function (e) {
        return traverse_(function (ke) {
            return Effect_Ref.modify($$delete(Web_UIEvent_KeyboardEvent.code(ke)))(keys);
        })(Web_UIEvent_KeyboardEvent.fromEvent(e));
    })();
    Web_Event_EventTarget.addEventListener(wrap("keydown"))(keyDownListener)(false)(target)();
    Web_Event_EventTarget.addEventListener(wrap("keyup"))(keyUpListener)(false)(target)();
    var dispose = function __do() {
        Web_Event_EventTarget.removeEventListener(wrap("keydown"))(keyDownListener)(false)(target)();
        return Web_Event_EventTarget.removeEventListener(wrap("keyup"))(keyUpListener)(false)(target)();
    };
    return {
        keys: keys,
        dispose: dispose
    };
};
var down = /* #__PURE__ */ FRP_Event.makeEvent(function (k) {
    return function __do() {
        var target = map(Web_HTML_Window.toEventTarget)(Web_HTML.window)();
        var keyDownListener = Web_Event_EventTarget.eventListener(function (e) {
            return traverse_(function (ke) {
                return k(Web_UIEvent_KeyboardEvent.code(ke));
            })(Web_UIEvent_KeyboardEvent.fromEvent(e));
        })();
        Web_Event_EventTarget.addEventListener(wrap("keydown"))(keyDownListener)(false)(target)();
        return Web_Event_EventTarget.removeEventListener(wrap("keydown"))(keyDownListener)(false)(target);
    };
});
var disposeKeyboard = function (v) {
    return v.dispose;
};
export {
    getKeyboard,
    disposeKeyboard,
    down,
    up,
    withKeys
};
