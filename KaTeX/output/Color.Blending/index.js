// Generated by purs version 0.15.9
import * as Color from "../Color/index.js";
import * as Data_Boolean from "../Data.Boolean/index.js";
var Multiply = /* #__PURE__ */ (function () {
    function Multiply() {

    };
    Multiply.value = new Multiply();
    return Multiply;
})();
var Screen = /* #__PURE__ */ (function () {
    function Screen() {

    };
    Screen.value = new Screen();
    return Screen;
})();
var Overlay = /* #__PURE__ */ (function () {
    function Overlay() {

    };
    Overlay.value = new Overlay();
    return Overlay;
})();
var blendChannel = function (v) {
    return function (v1) {
        return function (v2) {
            if (v instanceof Multiply) {
                return v1 * v2;
            };
            if (v instanceof Screen) {
                return 1.0 - (1.0 - v1) * (1.0 - v2);
            };
            if (v instanceof Overlay) {
                if (v1 < 0.5) {
                    return 2.0 * v1 * v2;
                };
                if (Data_Boolean.otherwise) {
                    return 1.0 - 2.0 * (1.0 - v1) * (1.0 - v2);
                };
            };
            throw new Error("Failed pattern match at Color.Blending (line 13, column 1 - line 13, column 56): " + [ v.constructor.name, v1.constructor.name, v2.constructor.name ]);
        };
    };
};
var blend = function (mode) {
    return function (c1) {
        return function (c2) {
            var v2 = Color["toRGBA$prime"](c2);
            var v1 = Color["toRGBA$prime"](c1);
            var r = blendChannel(mode)(v1.r)(v2.r);
            var g = blendChannel(mode)(v1.g)(v2.g);
            var b = blendChannel(mode)(v1.b)(v2.b);
            var a = (v1.a + v2.a) / 2.0;
            return Color["rgba$prime"](r)(g)(b)(a);
        };
    };
};
export {
    Multiply,
    Screen,
    Overlay,
    blend
};
