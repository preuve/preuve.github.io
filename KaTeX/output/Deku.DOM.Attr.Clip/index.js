// Generated by purs version 0.15.9
import * as Deku_Attribute from "../Deku.Attribute/index.js";
var Clip = /* #__PURE__ */ (function () {
    function Clip() {

    };
    Clip.value = new Clip();
    return Clip;
})();
var attrSwitch_ClipString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "clip",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrImage_ClipString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "clip",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFilter_ClipString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "clip",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeTurbulence_ClipStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "clip",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeTile_ClipString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "clip",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeSpecularLighting_Cl = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "clip",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeOffset_ClipString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "clip",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeMorphology_ClipStri = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "clip",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeMerge_ClipString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "clip",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeImage_ClipString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "clip",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeGaussianBlur_ClipSt = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "clip",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeFlood_ClipString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "clip",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeDisplacementMap_Cli = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "clip",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeDiffuseLighting_Cli = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "clip",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeConvolveMatrix_Clip = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "clip",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeComposite_ClipStrin = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "clip",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeComponentTransfer_C = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "clip",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeColorMatrix_ClipStr = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "clip",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrFeBlend_ClipString = {
    attr: function (v) {
        return function (value) {
            return Deku_Attribute.unsafeAttribute({
                key: "clip",
                value: Deku_Attribute["prop$prime"](value)
            });
        };
    }
};
var attrClipUnit = {
    attr: function (v) {
        return function (v1) {
            return Deku_Attribute.unsafeAttribute({
                key: "clip",
                value: Deku_Attribute["unset$prime"]
            });
        };
    }
};
export {
    Clip,
    attrFeBlend_ClipString,
    attrFeColorMatrix_ClipStr,
    attrFeComponentTransfer_C,
    attrFeComposite_ClipStrin,
    attrFeConvolveMatrix_Clip,
    attrFeDiffuseLighting_Cli,
    attrFeDisplacementMap_Cli,
    attrFeFlood_ClipString,
    attrFeGaussianBlur_ClipSt,
    attrFeImage_ClipString,
    attrFeMerge_ClipString,
    attrFeMorphology_ClipStri,
    attrFeOffset_ClipString,
    attrFeSpecularLighting_Cl,
    attrFeTile_ClipString,
    attrFeTurbulence_ClipStri,
    attrFilter_ClipString,
    attrImage_ClipString,
    attrSwitch_ClipString,
    attrClipUnit
};
