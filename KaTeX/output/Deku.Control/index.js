// Generated by purs version 0.15.9
import * as Bolson_Control from "../Bolson.Control/index.js";
import * as Bolson_Core from "../Bolson.Core/index.js";
import * as Control_Alt from "../Control.Alt/index.js";
import * as Control_Applicative from "../Control.Applicative/index.js";
import * as Control_Monad_ST_Internal from "../Control.Monad.ST.Internal/index.js";
import * as Control_Plus from "../Control.Plus/index.js";
import * as Control_Semigroupoid from "../Control.Semigroupoid/index.js";
import * as Data_Eq from "../Data.Eq/index.js";
import * as Data_FastVect_FastVect from "../Data.FastVect.FastVect/index.js";
import * as Data_Filterable from "../Data.Filterable/index.js";
import * as Data_Foldable from "../Data.Foldable/index.js";
import * as Data_Function from "../Data.Function/index.js";
import * as Data_Functor from "../Data.Functor/index.js";
import * as Data_FunctorWithIndex from "../Data.FunctorWithIndex/index.js";
import * as Data_Maybe from "../Data.Maybe/index.js";
import * as Data_Monoid from "../Data.Monoid/index.js";
import * as Data_Newtype from "../Data.Newtype/index.js";
import * as Data_Profunctor from "../Data.Profunctor/index.js";
import * as Data_Semigroup from "../Data.Semigroup/index.js";
import * as Data_Tuple from "../Data.Tuple/index.js";
import * as Data_Unit from "../Data.Unit/index.js";
import * as Deku_Attribute from "../Deku.Attribute/index.js";
import * as Deku_Core from "../Deku.Core/index.js";
import * as FRP_Event from "../FRP.Event/index.js";
import * as FRP_Event_Class from "../FRP.Event.Class/index.js";
import * as Record from "../Record/index.js";
import * as Safe_Coerce from "../Safe.Coerce/index.js";
import * as Type_Proxy from "../Type.Proxy/index.js";
var map = /* #__PURE__ */ Data_Functor.map(FRP_Event.functorEvent);
var compose = /* #__PURE__ */ Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn);
var merge = /* #__PURE__ */ FRP_Event.merge(Data_Foldable.foldableArray);
var pure = /* #__PURE__ */ Control_Applicative.pure(FRP_Event.applicativeEvent);
var empty = /* #__PURE__ */ Control_Plus.empty(FRP_Event.plusEvent);
var pure1 = /* #__PURE__ */ Control_Applicative.pure(Control_Monad_ST_Internal.applicativeST);
var mapAccum = /* #__PURE__ */ FRP_Event_Class.mapAccum(FRP_Event.eventIsEvent);
var keepLatest = /* #__PURE__ */ FRP_Event_Class.keepLatest(FRP_Event.eventIsEvent);
var filter = /* #__PURE__ */ Data_Filterable.filter(FRP_Event.filterableEvent);
var eq = /* #__PURE__ */ Data_Eq.eq(Data_Eq.eqInt);
var coerce = /* #__PURE__ */ Safe_Coerce.coerce();
var unwrap = /* #__PURE__ */ Data_Newtype.unwrap();
var eq1 = /* #__PURE__ */ Data_Eq.eq(Bolson_Core.eqScope);
var alt = /* #__PURE__ */ Control_Alt.alt(FRP_Event.altEvent);
var append = /* #__PURE__ */ Data_Semigroup.append(Data_Semigroup.semigroupArray);
var mapWithIndex = /* #__PURE__ */ Data_FunctorWithIndex.mapWithIndex(Data_FunctorWithIndex.functorWithIndexArray);
var map1 = /* #__PURE__ */ Data_Functor.map(Data_Functor.functorFn);
var globalPortalComplexComplex = /* #__PURE__ */ Bolson_Control.globalPortalComplexComplex()()();
var union = /* #__PURE__ */ Record.union();
var map2 = /* #__PURE__ */ Data_Functor.map(Data_FastVect_FastVect.functorVect);
var dimap = /* #__PURE__ */ Data_Profunctor.dimap(Data_Profunctor.profunctorFn);
var wrap = /* #__PURE__ */ Data_Newtype.wrap();
var lcmap = /* #__PURE__ */ Data_Profunctor.lcmap(Data_Profunctor.profunctorFn);
var index = /* #__PURE__ */ Data_FastVect_FastVect.index({
    reflectType: function () {
        return 0;
    }
})()()();
var portalComplexComplex = /* #__PURE__ */ Bolson_Control.portalComplexComplex()()();
var mapFlipped = /* #__PURE__ */ Data_Functor.mapFlipped(FRP_Event.functorEvent);
var Begin = /* #__PURE__ */ (function () {
    function Begin() {

    };
    Begin.value = new Begin();
    return Begin;
})();
var Middle = /* #__PURE__ */ (function () {
    function Middle() {

    };
    Middle.value = new Middle();
    return Middle;
})();
var End = /* #__PURE__ */ (function () {
    function End() {

    };
    End.value = new End();
    return End;
})();
var unsafeSetText = function (v) {
    return function (id) {
        return function (txt) {
            return map(function ($146) {
                return v.setText((function (v1) {
                    return {
                        id: id,
                        text: v1
                    };
                })($146));
            })(txt);
        };
    };
};
var unsafeSetAttribute = function (v) {
    return function (id) {
        return function (atts) {
            return map(function ($147) {
                return (function (v1) {
                    if (v1.value instanceof Deku_Attribute["Prop$prime"]) {
                        return v.setProp({
                            id: id,
                            key: v1.key,
                            value: v1.value.value0
                        });
                    };
                    if (v1.value instanceof Deku_Attribute["Cb$prime"]) {
                        return v.setCb({
                            id: id,
                            key: v1.key,
                            value: v1.value.value0
                        });
                    };
                    if (v1.value instanceof Deku_Attribute["Unset$prime"]) {
                        return v.unsetAttribute({
                            id: id,
                            key: v1.key
                        });
                    };
                    throw new Error("Failed pattern match at Deku.Control (line 72, column 28 - line 75, column 47): " + [ v1.value.constructor.name ]);
                })(Deku_Attribute.unsafeUnAttribute($147));
            })(atts);
        };
    };
};
var toDeku = /* #__PURE__ */ compose(Deku_Core.envy);
var text = function (txt) {
    var go = function (v) {
        return function (v1) {
            return FRP_Event.makeLemmingEventO(function (v2, k) {
                var me = v1.ids();
                v.raiseId(me)();
                var unsub = v2(merge([ pure(v1.makeText({
                    id: me,
                    parent: v.parent,
                    pos: v.pos,
                    scope: v.scope,
                    dynFamily: v.dynFamily
                })), unsafeSetText(v1)(me)(txt), Data_Maybe.maybe(empty)(function (p) {
                    return pure(v1.attributeParent({
                        id: me,
                        parent: p,
                        pos: v.pos,
                        dynFamily: v.dynFamily,
                        ez: v.ez
                    }));
                })(v.parent) ]), k);
                return function __do() {
                    k(v1.deleteFromCache({
                        id: me
                    }));
                    return unsub();
                };
            });
        };
    };
    var go$prime = new Bolson_Core["Element$prime"](go);
    return go$prime;
};
var text_ = function (txt) {
    return text(pure(txt));
};
var switcher = function (f) {
    return function (event) {
        var counter = (function () {
            var fn = function (a) {
                return function (b) {
                    return new Data_Tuple.Tuple(a + 1 | 0, new Data_Tuple.Tuple(b, a));
                };
            };
            return mapAccum(fn)(0);
        })();
        return Deku_Core.dyn(keepLatest(FRP_Event.memoize(counter(event))(function (cenv) {
            return map(function (v) {
                return merge([ map(Data_Function["const"](Deku_Core.remove))(filter((function () {
                    var $148 = eq(v.value1 + 1 | 0);
                    return function ($149) {
                        return $148(Data_Tuple.snd($149));
                    };
                })())(cenv)), pure(Deku_Core.insert_(coerce(f(v.value0)))) ]);
            })(cenv);
        })));
    };
};
var switcherFlipped = /* #__PURE__ */ Data_Function.flip(switcher);
var portalFlatten = function () {
    return {
        doLogic: function (pos) {
            return function (v) {
                return function (id) {
                    return v.sendToPos({
                        id: id,
                        pos: pos
                    });
                };
            };
        },
        ids: function ($150) {
            return (function (v) {
                return v.ids;
            })(unwrap($150));
        },
        disconnectElement: function (v) {
            return function (v1) {
                return v.disconnectElement({
                    id: v1.id,
                    scope: v1.scope,
                    parent: v1.parent,
                    scopeEq: eq1
                });
            };
        },
        toElt: function (v) {
            return v;
        }
    };
};
var portalFlatten1 = /* #__PURE__ */ portalFlatten();
var blank = /* #__PURE__ */ Data_Monoid.mempty(Deku_Core.monoidNut);
var guard = function (eb) {
    return function (d) {
        return switcher(function (v) {
            if (v) {
                return d;
            };
            return blank;
        })(eb);
    };
};
var __internalDekuFlatten = function (a) {
    return function (b) {
        return function (v) {
            return Bolson_Control.flatten(portalFlatten1)(a)(b)(v);
        };
    };
};
var deku = function (root) {
    return function (v) {
        var go = function (children) {
            return function (v1) {
                return FRP_Event.makeLemmingEventO(function (v2, k) {
                    return v2(alt(pure(v1.makeRoot({
                        id: "deku-root",
                        root: root
                    })))(__internalDekuFlatten({
                        parent: new Data_Maybe.Just("deku-root"),
                        scope: new Bolson_Core.Local("rootScope"),
                        raiseId: function (v3) {
                            return pure1(Data_Unit.unit);
                        },
                        ez: true,
                        pos: Data_Maybe.Nothing.value,
                        dynFamily: Data_Maybe.Nothing.value
                    })(v1)(children)), k);
                });
            };
        };
        return go(v);
    };
};
var elementify = function (tag) {
    return function (atts) {
        return function (children) {
            var go = function (v) {
                return function (v1) {
                    return FRP_Event.makeLemmingEventO(function (v2, k) {
                        var me = v1.ids();
                        v.raiseId(me)();
                        var unsub = v2(alt(merge(append([ pure(v1.makeElement({
                            id: me,
                            parent: v.parent,
                            scope: v.scope,
                            tag: tag,
                            pos: v.pos,
                            dynFamily: v.dynFamily
                        })), unsafeSetAttribute(v1)(me)(atts) ])(Data_Maybe.maybe([  ])(function (p) {
                            return [ pure(v1.attributeParent({
                                id: me,
                                parent: p,
                                pos: v.pos,
                                dynFamily: v.dynFamily,
                                ez: v.ez
                            })) ];
                        })(v.parent))))(__internalDekuFlatten({
                            parent: new Data_Maybe.Just(me),
                            scope: v.scope,
                            ez: true,
                            raiseId: function (v3) {
                                return pure1(Data_Unit.unit);
                            },
                            pos: Data_Maybe.Nothing.value,
                            dynFamily: Data_Maybe.Nothing.value
                        })(v1)(children)), k);
                        return function __do() {
                            k(v1.deleteFromCache({
                                id: me
                            }));
                            return unsub();
                        };
                    });
                };
            };
            return go;
        };
    };
};
var elementify2 = function (en) {
    return function (attributes) {
        return function (kids) {
            var aa = function (v) {
                if (v.length === 0) {
                    return empty;
                };
                if (v.length === 1) {
                    return v[0];
                };
                return merge(v);
            };
            var step1 = function (arr) {
                return new Bolson_Core["Element$prime"](elementify(en)(aa(attributes))(Bolson_Core.fixed(coerce(arr))));
            };
            return step1(mapWithIndex(map1(map1(function (v) {
                return v;
            }))(Deku_Core.unsafeSetPos))(kids));
        };
    };
};
var globalPortal = function () {
    return function (v$prime) {
        return function (c$prime) {
            var go = function (v) {
                return function (c) {
                    return globalPortalComplexComplex(portalFlatten1)({
                        fromEltO1: coerce,
                        fromEltO2: coerce,
                        toElt: coerce,
                        wrapElt: function (i) {
                            return new Bolson_Core["Element$prime"](elementify("div")(empty)(coerce(i)));
                        },
                        giveNewParent: function (a) {
                            return function (b) {
                                return function (ctor) {
                                    return function (v1) {
                                        return (unwrap(a)).giveNewParent(union(b)({
                                            ctor: coerce(ctor)
                                        }));
                                    };
                                };
                            };
                        },
                        deleteFromCache: function ($151) {
                            return (function (v1) {
                                return v1.deleteFromCache;
                            })(unwrap($151));
                        }
                    })(map2(unwrap)(v))(dimap(map2(function ($152) {
                        return wrap((function (v1) {
                            return v1(Data_Unit.unit);
                        })($152));
                    }))(unwrap)(c));
                };
            };
            return go(map2(function (v) {
                return v;
            })(v$prime))(c$prime);
        };
    };
};
var globalPortal2 = /* #__PURE__ */ globalPortal();
var globalPortal1 = function (i) {
    return function (f) {
        return globalPortal2(Data_FastVect_FastVect.singleton(i))(lcmap(index(Type_Proxy["Proxy"].value))(f));
    };
};
var portal = function () {
    return function (v$prime) {
        return function (c$prime) {
            var go = function (v) {
                return function (c) {
                    return portalComplexComplex(portalFlatten1)({
                        fromEltO1: coerce,
                        fromEltO2: coerce,
                        toElt: coerce,
                        wrapElt: function (i) {
                            return new Bolson_Core["Element$prime"](elementify("div")(empty)(coerce(i)));
                        },
                        giveNewParent: function (a) {
                            return function (b) {
                                return function (ctor) {
                                    return function (v1) {
                                        return (unwrap(a)).giveNewParent(union(b)({
                                            ctor: coerce(ctor)
                                        }));
                                    };
                                };
                            };
                        },
                        deleteFromCache: function ($153) {
                            return (function (v1) {
                                return v1.deleteFromCache;
                            })(unwrap($153));
                        }
                    })(map2(unwrap)(v))(dimap(map2(function ($154) {
                        return wrap((function (v1) {
                            return v1(Data_Unit.unit);
                        })($154));
                    }))(unwrap)(c));
                };
            };
            return Deku_Core.dyn(mapFlipped(pure(Data_Unit.unit))(function (v) {
                return pure(Deku_Core.insert_(go(map2(function (v1) {
                    return v1;
                })(v$prime))(c$prime)));
            }));
        };
    };
};
var portal2 = /* #__PURE__ */ portal();
var portal1 = function (i) {
    return function (f) {
        return portal2(Data_FastVect_FastVect.singleton(i))(lcmap(index(Type_Proxy["Proxy"].value))(f));
    };
};
export {
    blank,
    deku,
    elementify2,
    toDeku,
    globalPortal,
    globalPortal1,
    guard,
    portal,
    portal1,
    switcher,
    switcherFlipped,
    text,
    text_
};
