// Generated by purs version 0.13.3
"use strict";
var Color = require("../Color/index.js");
var Control_Alt = require("../Control.Alt/index.js");
var Control_Applicative = require("../Control.Applicative/index.js");
var DOM_Editor = require("../DOM.Editor/index.js");
var Data_Array = require("../Data.Array/index.js");
var Data_Boolean = require("../Data.Boolean/index.js");
var Data_Eq = require("../Data.Eq/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Function = require("../Data.Function/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Int = require("../Data.Int/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Monoid = require("../Data.Monoid/index.js");
var Data_Semigroup = require("../Data.Semigroup/index.js");
var Data_Set = require("../Data.Set/index.js");
var Data_Show = require("../Data.Show/index.js");
var Data_Symbol = require("../Data.Symbol/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect = require("../Effect/index.js");
var FRP_Behavior = require("../FRP.Behavior/index.js");
var FRP_Event = require("../FRP.Event/index.js");
var FRP_Event_Mouse = require("../FRP.Event.Mouse/index.js");
var FRP_Event_Time = require("../FRP.Event.Time/index.js");
var Graphics_Canvas_Geometry = require("../Graphics.Canvas.Geometry/index.js");
var Graphics_Drawing = require("../Graphics.Drawing/index.js");
var Graphics_Drawing_Font = require("../Graphics.Drawing.Font/index.js");
var FA = (function () {
    function FA(value0) {
        this.value0 = value0;
    };
    FA.create = function (value0) {
        return new FA(value0);
    };
    return FA;
})();
var FP = (function () {
    function FP(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    FP.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new FP(value0, value1, value2);
            };
        };
    };
    return FP;
})();
var FL = (function () {
    function FL(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    FL.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new FL(value0, value1, value2);
            };
        };
    };
    return FL;
})();
var FC = (function () {
    function FC(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    FC.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new FC(value0, value1, value2);
            };
        };
    };
    return FC;
})();
var FH = (function () {
    function FH(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    FH.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new FH(value0, value1, value2);
            };
        };
    };
    return FH;
})();
var FS = (function () {
    function FS(value0, value1, value2) {
        this.value0 = value0;
        this.value1 = value1;
        this.value2 = value2;
    };
    FS.create = function (value0) {
        return function (value1) {
            return function (value2) {
                return new FS(value0, value1, value2);
            };
        };
    };
    return FS;
})();
var width = 800.0;
var white = Graphics_Drawing.fillColor(Color.rgb(255)(255)(255));
var square = {
    "function": {
        domain: Data_Function["const"](true),
        expression: function (x) {
            return x * x;
        }
    },
    diff: {
        domain: Data_Function["const"](true),
        expression: function (x) {
            return 2.0 * x;
        }
    }
};
var somePosition = Data_Maybe.maybe({
    x: 0.0,
    y: 0.0
})(function (v) {
    return {
        x: Data_Int.toNumber(v.x),
        y: Data_Int.toNumber(v.y)
    };
});
var remap = function (v) {
    return function (p) {
        return function (v1) {
            var v2 = Graphics_Canvas_Geometry.vector(v.center)(p);
            var x = (Graphics_Canvas_Geometry.abs(Graphics_Canvas_Geometry.basedVector)(v2) * v1.halfWidth) / v.halfWidth;
            var y = (Graphics_Canvas_Geometry.ord(Graphics_Canvas_Geometry.basedVector)(v2) * v1.halfHeight) / v.halfHeight;
            return Graphics_Canvas_Geometry.point("")(x + Graphics_Canvas_Geometry.abs(Graphics_Canvas_Geometry.basedPoint)(v1.center))(y + Graphics_Canvas_Geometry.ord(Graphics_Canvas_Geometry.basedPoint)(v1.center));
        };
    };
};
var purple = Color.rgb(179)(14)(203);
var tanStyle = {
    color: purple,
    lineWidth: 1.5
};
var pen = function ($copy_dictPartial) {
    return function ($copy_from) {
        return function ($copy_acc) {
            return function ($copy_v) {
                return function ($copy_v1) {
                    var $tco_var_dictPartial = $copy_dictPartial;
                    var $tco_var_from = $copy_from;
                    var $tco_var_acc = $copy_acc;
                    var $tco_var_v = $copy_v;
                    var $tco_done = false;
                    var $tco_result;
                    function $tco_loop(dictPartial, from, acc, v, v1) {
                        if (v1.length === 0) {
                            $tco_done = true;
                            return acc;
                        };
                        if (v instanceof Data_Maybe.Just) {
                            var topY = Graphics_Canvas_Geometry.ord(Graphics_Canvas_Geometry.basedPoint)(from.center) + from.halfHeight;
                            var botY = Graphics_Canvas_Geometry.ord(Graphics_Canvas_Geometry.basedPoint)(from.center) - from.halfHeight;
                            var okY = function (y) {
                                return botY <= y && y <= topY;
                            };
                            var v2 = Data_Array.uncons(v1);
                            if (v2 instanceof Data_Maybe.Just) {
                                if (v2.value0.head instanceof Data_Maybe.Just) {
                                    $tco_var_dictPartial = undefined;
                                    $tco_var_from = from;
                                    $tco_var_acc = (function () {
                                        var $116 = okY(v.value0.y) && okY(v2.value0.head.value0.y);
                                        if ($116) {
                                            return Data_Semigroup.append(Data_Semigroup.semigroupArray)(acc)([ Graphics_Canvas_Geometry.segment(Graphics_Canvas_Geometry.point("")(v.value0.x)(v.value0.y))(Graphics_Canvas_Geometry.point("")(v2.value0.head.value0.x)(v2.value0.head.value0.y))(Data_Maybe.Nothing.value) ]);
                                        };
                                        return acc;
                                    })();
                                    $tco_var_v = v2.value0.head;
                                    $copy_v1 = v2.value0.tail;
                                    return;
                                };
                                if (v2.value0.head instanceof Data_Maybe.Nothing) {
                                    var ys = Data_Array.dropWhile(function (v3) {
                                        return Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                                            return "y";
                                        }))(Data_Eq.eqNumber))()(new Data_Symbol.IsSymbol(function () {
                                            return "x";
                                        }))(Data_Eq.eqNumber))))(v3)(Data_Maybe.Nothing.value);
                                    })(v2.value0.tail);
                                    var $120 = Data_Array.length(ys) === 0;
                                    if ($120) {
                                        $tco_done = true;
                                        return acc;
                                    };
                                    $tco_var_dictPartial = undefined;
                                    $tco_var_from = from;
                                    $tco_var_acc = acc;
                                    $tco_var_v = Data_Maybe.fromJust()(Data_Array.head(ys));
                                    $copy_v1 = Data_Maybe.fromJust()(Data_Array.tail(ys));
                                    return;
                                };
                                throw new Error("Failed pattern match at Main (line 71, column 11 - line 83, column 74): " + [ v2.value0.head.constructor.name ]);
                            };
                            if (v2 instanceof Data_Maybe.Nothing) {
                                $tco_done = true;
                                return acc;
                            };
                            throw new Error("Failed pattern match at Main (line 69, column 6 - line 84, column 21): " + [ v2.constructor.name ]);
                        };
                        throw new Error("Failed pattern match at Main (line 60, column 1 - line 63, column 76): " + [ from.constructor.name, acc.constructor.name, v.constructor.name, v1.constructor.name ]);
                    };
                    while (!$tco_done) {
                        $tco_result = $tco_loop($tco_var_dictPartial, $tco_var_from, $tco_var_acc, $tco_var_v, $copy_v1);
                    };
                    return $tco_result;
                };
            };
        };
    };
};
var moveWithButton = Data_Functor.map(Effect.functorEffect)(function (mouse) {
    return Data_Functor.map(FRP_Event.functorEvent)(function (v) {
        return {
            value: (function () {
                var $126 = Data_Set.isEmpty(v.buttons);
                if ($126) {
                    return "buttonup";
                };
                return "buttondown";
            })(),
            pos: v.value
        };
    })(FRP_Event_Mouse.withButtons(mouse)(Data_Functor.map(FRP_Event.functorEvent)(function (v) {
        return somePosition(v.pos);
    })(FRP_Event_Mouse.withPosition(mouse)(FRP_Event_Time.interval(10)))));
})(FRP_Event_Mouse.getMouse);
var local = {
    center: Graphics_Canvas_Geometry.point("")(0.0)(0.0),
    halfWidth: 6.0,
    halfHeight: 5.0
};
var inverse = {
    "function": {
        domain: function (x) {
            return x !== 0.0;
        },
        expression: function (x) {
            return 1.0 / x;
        }
    },
    diff: {
        domain: function (x) {
            return x !== 0.0;
        },
        expression: function (x) {
            return -1.0 / x / x;
        }
    }
};
var inInterval = function (a) {
    return function (b) {
        return function (x) {
            return a <= x && x <= b;
        };
    };
};
var inBox = function (v) {
    return function (p) {
        return inInterval(Graphics_Canvas_Geometry.abs(Graphics_Canvas_Geometry.basedPoint)(v.center) - v.halfWidth)(Graphics_Canvas_Geometry.abs(Graphics_Canvas_Geometry.basedPoint)(v.center) + v.halfWidth)(Graphics_Canvas_Geometry.abs(Graphics_Canvas_Geometry.basedPoint)(p)) && inInterval(Graphics_Canvas_Geometry.ord(Graphics_Canvas_Geometry.basedPoint)(v.center) - v.halfHeight)(Graphics_Canvas_Geometry.ord(Graphics_Canvas_Geometry.basedPoint)(v.center) + v.halfHeight)(Graphics_Canvas_Geometry.ord(Graphics_Canvas_Geometry.basedPoint)(p));
    };
};
var height = 600.0;
var window = {
    center: Graphics_Canvas_Geometry.point("")(width / 2.0)(height / 2.0),
    halfWidth: width / 2.0,
    halfHeight: height / 2.0
};
var functionDisplay = {
    center: Graphics_Canvas_Geometry.point("")(width / 2.0)(height / 4.1),
    halfWidth: width / 2.0,
    halfHeight: height / 4.1
};
var frame = function (v) {
    var seg = function (sx) {
        return function (sy) {
            return function (tx) {
                return function (ty) {
                    return Graphics_Canvas_Geometry.segment(Graphics_Canvas_Geometry.point("")(Graphics_Canvas_Geometry.abs(Graphics_Canvas_Geometry.basedPoint)(v.center) + sx * v.halfWidth)(Graphics_Canvas_Geometry.ord(Graphics_Canvas_Geometry.basedPoint)(v.center) + sy * v.halfHeight))(Graphics_Canvas_Geometry.point("")(Graphics_Canvas_Geometry.abs(Graphics_Canvas_Geometry.basedPoint)(v.center) + tx * v.halfWidth)(Graphics_Canvas_Geometry.ord(Graphics_Canvas_Geometry.basedPoint)(v.center) + ty * v.halfHeight))(Data_Maybe.Nothing.value);
                };
            };
        };
    };
    return [ seg(-1.0)(-1.0)(1.0)(-1.0), seg(1.0)(-1.0)(1.0)(1.0), seg(1.0)(1.0)(-1.0)(1.0), seg(-1.0)(1.0)(-1.0)(-1.0) ];
};
var segmentInBox = function (v) {
    return function (v1) {
        var candidates = Data_Array.filter(function ($260) {
            return (function (v2) {
                return v2 === 1;
            })(Data_Array.length($260));
        })(Data_Functor.map(Data_Functor.functorArray)(function (v2) {
            return Graphics_Canvas_Geometry.meets(Graphics_Canvas_Geometry.interSegmentSegment)(v1)(v2);
        })(frame(v)));
        if (inBox(v)(v1.origin) && inBox(v)(v1.extremity)) {
            return new Data_Maybe.Just(v1);
        };
        if (inBox(v)(v1.origin)) {
            if (candidates.length === 1 && candidates[0].length === 1) {
                return Data_Maybe.Just.create(Graphics_Canvas_Geometry.segment(v1.origin)(candidates[0][0])(Data_Maybe.Nothing.value));
            };
            throw new Error("Failed pattern match at Main (line 364, column 21 - line 364, column 39): " + [ candidates.constructor.name ]);
        };
        if (inBox(v)(v1.extremity)) {
            if (candidates.length === 1 && candidates[0].length === 1) {
                return Data_Maybe.Just.create(Graphics_Canvas_Geometry.segment(v1.extremity)(candidates[0][0])(Data_Maybe.Nothing.value));
            };
            throw new Error("Failed pattern match at Main (line 367, column 20 - line 367, column 38): " + [ candidates.constructor.name ]);
        };
        if (Data_Boolean.otherwise) {
            var $150 = Data_Array.length(candidates) === 2;
            if ($150) {
                if (candidates.length === 2 && (candidates[0].length === 1 && candidates[1].length === 1)) {
                    return Data_Maybe.Just.create(Graphics_Canvas_Geometry.segment(candidates[0][0])(candidates[1][0])(Data_Maybe.Nothing.value));
                };
                throw new Error("Failed pattern match at Main (line 371, column 28 - line 371, column 50): " + [ candidates.constructor.name ]);
            };
            return Data_Maybe.Nothing.value;
        };
        throw new Error("Failed pattern match at Main (line 361, column 7 - line 373, column 31): " + [ Data_Unit.unit.constructor.name ]);
    };
};
var lineInBox = function (b) {
    return function (l) {
        var v = Graphics_Canvas_Geometry.aVectorOfLine(l);
        var p = Graphics_Canvas_Geometry.aPointOnLine(l);
        return segmentInBox(b)(Graphics_Canvas_Geometry.segment(Graphics_Canvas_Geometry.plus(Graphics_Canvas_Geometry.summublePointVector)(p)(Graphics_Canvas_Geometry.scale(-50.0)(v)))(Graphics_Canvas_Geometry.plus(Graphics_Canvas_Geometry.summublePointVector)(p)(Graphics_Canvas_Geometry.scale(50.0)(v)))(Data_Maybe.Nothing.value));
    };
};
var drawableFinal = new Graphics_Canvas_Geometry.DrawableSet(function (ctx) {
    return function (v) {
        if (v instanceof FP) {
            return Graphics_Canvas_Geometry.drawIn(Graphics_Canvas_Geometry.drawablePoint)(ctx)(remap(v.value0)(v.value2)(v.value1));
        };
        if (v instanceof FL) {
            var p = Graphics_Canvas_Geometry.aPointOnLine(v.value2);
            var q = Graphics_Canvas_Geometry.plus(Graphics_Canvas_Geometry.summublePointVector)(p)(Graphics_Canvas_Geometry.aVectorOfLine(v.value2));
            return Graphics_Canvas_Geometry.drawIn(Graphics_Canvas_Geometry.drawableLine)(ctx)(Graphics_Canvas_Geometry.line(remap(v.value0)(p)(v.value1))(remap(v.value0)(q)(v.value1)));
        };
        if (v instanceof FC) {
            var q = remap(v.value0)(Graphics_Canvas_Geometry.point("")(Graphics_Canvas_Geometry.abs(Graphics_Canvas_Geometry.basedPoint)(v.value2.center) + v.value2.radius)(Graphics_Canvas_Geometry.ord(Graphics_Canvas_Geometry.basedPoint)(v.value2.center)))(v.value1);
            var p = remap(v.value0)(v.value2.center)(v.value1);
            return Graphics_Canvas_Geometry.drawIn(Graphics_Canvas_Geometry.drawableCircle)(ctx)(Graphics_Canvas_Geometry.circle(p)(Graphics_Canvas_Geometry.length(Graphics_Canvas_Geometry.measurableVector)(Graphics_Canvas_Geometry.vector(p)(q))));
        };
        if (v instanceof FH) {
            var q = remap(v.value0)(Graphics_Canvas_Geometry.plus(Graphics_Canvas_Geometry.summublePointVector)(v.value2.origin)(v.value2.direction))(v.value1);
            var p = remap(v.value0)(v.value2.origin)(v.value1);
            return Graphics_Canvas_Geometry.drawIn(Graphics_Canvas_Geometry.drawableHalfLine)(ctx)({
                origin: p,
                direction: Graphics_Canvas_Geometry.vector(p)(q)
            });
        };
        if (v instanceof FS) {
            return Graphics_Canvas_Geometry.drawIn(Graphics_Canvas_Geometry.drawableSegment)(ctx)({
                origin: remap(v.value0)(v.value2.origin)(v.value1),
                extremity: remap(v.value0)(v.value2.extremity)(v.value1),
                asOriented: v.value2.asOriented
            });
        };
        if (v instanceof FA) {
            return Graphics_Canvas_Geometry.drawIn(Graphics_Canvas_Geometry.drawableSequence(drawableFinal))(ctx)(v.value0);
        };
        throw new Error("Failed pattern match at Main (line 169, column 1 - line 187, column 39): " + [ ctx.constructor.name, v.constructor.name ]);
    };
});
var grid = function (from) {
    return function (to) {
        var topY = Graphics_Canvas_Geometry.ord(Graphics_Canvas_Geometry.basedPoint)(from.center) + from.halfHeight;
        var topX = Graphics_Canvas_Geometry.abs(Graphics_Canvas_Geometry.basedPoint)(from.center) + from.halfWidth;
        var seg = function (x) {
            return function (y) {
                return function (x$prime) {
                    return function (y$prime) {
                        return FS.create(from)(to)(Graphics_Canvas_Geometry.segment(Graphics_Canvas_Geometry.point("")(x)(y))(Graphics_Canvas_Geometry.point("")(x$prime)(y$prime))(Data_Maybe.Nothing.value));
                    };
                };
            };
        };
        var ctx = function (lW) {
            return {
                color: Color.rgb(50)(50)(50),
                lineWidth: lW
            };
        };
        var botY = Graphics_Canvas_Geometry.ord(Graphics_Canvas_Geometry.basedPoint)(from.center) - from.halfHeight;
        var segAtX = function (x) {
            return seg(x)(botY)(x)(topY);
        };
        var botX = Graphics_Canvas_Geometry.abs(Graphics_Canvas_Geometry.basedPoint)(from.center) - from.halfWidth;
        var segAtY = function (y) {
            return seg(botX)(y)(topX)(y);
        };
        return Data_Semigroup.append(Graphics_Drawing.semigroupDrawing)(Data_Foldable.foldr(Data_Foldable.foldableArray)(Data_Semigroup.append(Graphics_Drawing.semigroupDrawing))(Data_Monoid.mempty(Graphics_Drawing.monoidDrawing))(Data_Functor.map(Data_Functor.functorArray)(function (n) {
            return Graphics_Canvas_Geometry.drawIn(drawableFinal)(ctx(0.5))(segAtX(Data_Int.toNumber(n)));
        })(Data_Array.range(Data_Int.ceil(botX))(Data_Int.floor(topX)))))(Data_Semigroup.append(Graphics_Drawing.semigroupDrawing)(Data_Foldable.foldr(Data_Foldable.foldableArray)(Data_Semigroup.append(Graphics_Drawing.semigroupDrawing))(Data_Monoid.mempty(Graphics_Drawing.monoidDrawing))(Data_Functor.map(Data_Functor.functorArray)(function (n) {
            return Graphics_Canvas_Geometry.drawIn(drawableFinal)(ctx(0.5))(segAtY(Data_Int.toNumber(n)));
        })(Data_Array.range(Data_Int.ceil(botY))(Data_Int.floor(topY)))))(Data_Semigroup.append(Graphics_Drawing.semigroupDrawing)(Graphics_Canvas_Geometry.drawIn(drawableFinal)(ctx(1.5))(segAtX(0.0)))((function () {
            var $184 = botY <= 0.0 && 0.0 <= topY;
            if ($184) {
                return Graphics_Canvas_Geometry.drawIn(drawableFinal)(ctx(1.5))(segAtY(0.0));
            };
            return Data_Monoid.mempty(Graphics_Drawing.monoidDrawing);
        })())));
    };
};
var digit2 = function (a) {
    return (function (v) {
        return v / 100.0;
    })(Data_Int.toNumber(Data_Int.round(a * 100.0)));
};
var diffDisplay = {
    center: Graphics_Canvas_Geometry.point("")(width / 2.0)((3.1 * height) / 4.1),
    halfWidth: width / 2.0,
    halfHeight: height / 4.1
};
var initialState = {
    fAndDf: inverse,
    fromF: local,
    toF: functionDisplay,
    fromD: local,
    toD: diffDisplay,
    displayD: false,
    displayT: false,
    numbers: [  ],
    previousX: 0.0,
    previousY: 0.0
};
var density = 200;
var plot = function (draw) {
    return function (from) {
        return function (to) {
            return function (v) {
                var topX = Graphics_Canvas_Geometry.abs(Graphics_Canvas_Geometry.basedPoint)(from.center) + from.halfWidth;
                var botX = Graphics_Canvas_Geometry.abs(Graphics_Canvas_Geometry.basedPoint)(from.center) - from.halfWidth;
                var zs = Data_Array.dropWhile(function (v1) {
                    return Data_Eq.eq(Data_Maybe.eqMaybe(Data_Eq.eqRec()(Data_Eq.eqRowCons(Data_Eq.eqRowCons(Data_Eq.eqRowNil)()(new Data_Symbol.IsSymbol(function () {
                        return "y";
                    }))(Data_Eq.eqNumber))()(new Data_Symbol.IsSymbol(function () {
                        return "x";
                    }))(Data_Eq.eqNumber))))(v1)(Data_Maybe.Nothing.value);
                })(Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Data_Functor.functorFn)(function (x) {
                    var $189 = v.domain(x);
                    if ($189) {
                        return new Data_Maybe.Just({
                            x: x,
                            y: -v.expression(x)
                        });
                    };
                    return Data_Maybe.Nothing.value;
                })(function (n) {
                    return botX + (Data_Int.toNumber(n) * (topX - botX)) / Data_Int.toNumber(density);
                }))(Data_Array.range(0)(density)));
                var $190 = Data_Array.length(zs) === 0;
                if ($190) {
                    return Data_Monoid.mempty(Graphics_Drawing.monoidDrawing);
                };
                return Data_Foldable.foldr(Data_Foldable.foldableArray)(function (s) {
                    return function (acc) {
                        return Data_Semigroup.append(Graphics_Drawing.semigroupDrawing)(acc)(draw(new FS(from, to, s)));
                    };
                })(Data_Monoid.mempty(Graphics_Drawing.monoidDrawing))(pen()(from)([  ])(Data_Maybe.fromJust()(Data_Array.head(zs)))(Data_Maybe.fromJust()(Data_Array.tail(zs))));
            };
        };
    };
};
var cursor = function (v) {
    return Graphics_Canvas_Geometry.segment(Graphics_Canvas_Geometry.point("")(Graphics_Canvas_Geometry.abs(Graphics_Canvas_Geometry.basedPoint)(v.center))(Graphics_Canvas_Geometry.ord(Graphics_Canvas_Geometry.basedPoint)(v.center) - v.halfHeight))(Graphics_Canvas_Geometry.point("")(Graphics_Canvas_Geometry.abs(Graphics_Canvas_Geometry.basedPoint)(v.center))(Graphics_Canvas_Geometry.ord(Graphics_Canvas_Geometry.basedPoint)(v.center) + v.halfHeight))(Data_Maybe.Nothing.value);
};
var curryBox = function (f) {
    return function (v) {
        return f(Graphics_Canvas_Geometry.abs(Graphics_Canvas_Geometry.basedPoint)(v.center) - v.halfWidth)(Graphics_Canvas_Geometry.ord(Graphics_Canvas_Geometry.basedPoint)(v.center) - v.halfHeight)(2.0 * v.halfWidth)(2.0 * v.halfHeight);
    };
};
var cb = function (msg) {
    return function (v) {
        return function (ev) {
            return v.push({
                value: msg,
                pos: {
                    x: 0.0,
                    y: 0.0
                }
            });
        };
    };
};
var mkButtonEvent = function (setup) {
    return function (msg) {
        return function __do() {
            var v = DOM_Editor.createElement("button")(setup.document)();
            var v1 = DOM_Editor.setTextContent(msg)(v)();
            var v2 = DOM_Editor.appendChild(v)(setup.body)();
            var v3 = FRP_Event.create();
            var v4 = DOM_Editor.addEventListener(cb(msg)(v3))(DOM_Editor.click)(v)();
            return v3;
        };
    };
};
var mkOptionEvent = function (setup) {
    return function (select) {
        return function (msg) {
            return function __do() {
                var v = DOM_Editor.createElement("option")(setup.document)();
                var v1 = DOM_Editor.setTextContent(msg)(v)();
                var v2 = DOM_Editor.appendChild(v)(select)();
                var v3 = FRP_Event.create();
                var v4 = DOM_Editor.addEventListener(cb(msg)(v3))(DOM_Editor.click)(v)();
                return v3;
            };
        };
    };
};
var blue = Color.rgb(6)(2)(198);
var reframe = function (draw) {
    return function (v) {
        return Data_Semigroup.append(Graphics_Drawing.semigroupDrawing)(grid(v.fromF)(v.toF))(Data_Semigroup.append(Graphics_Drawing.semigroupDrawing)(grid(v.fromD)(v.toD))(Data_Semigroup.append(Graphics_Drawing.semigroupDrawing)(plot(draw)(v.fromF)(v.toF)(v["fAndDf"]["function"]))(Data_Semigroup.append(Graphics_Drawing.semigroupDrawing)((function () {
            if (v.displayD) {
                return plot(draw)(v.fromD)(v.toD)(v.fAndDf.diff);
            };
            return Data_Monoid.mempty(Graphics_Drawing.monoidDrawing);
        })())(Data_Semigroup.append(Graphics_Drawing.semigroupDrawing)((function () {
            var x = Graphics_Canvas_Geometry.abs(Graphics_Canvas_Geometry.basedPoint)(remap(v.toF)(v.toF.center)(v.fromF));
            var $214 = v["fAndDf"]["function"].domain(x);
            if ($214) {
                var p = Graphics_Canvas_Geometry.point("")(x)(-v["fAndDf"]["function"].expression(x));
                var c = x * v.fAndDf.diff.expression(x) - v["fAndDf"]["function"].expression(x);
                var c2 = digit2(-c);
                var b = -1.0;
                var a = -v.fAndDf.diff.expression(x);
                var a2 = digit2(-a);
                return Data_Semigroup.append(Graphics_Drawing.semigroupDrawing)(Graphics_Drawing.text(Graphics_Drawing_Font.font(Graphics_Drawing_Font.serif)(15)(Data_Semigroup.append(Graphics_Drawing_Font.semigroupFontOptions)(Graphics_Drawing_Font.italic)(Graphics_Drawing_Font.bold)))(width * 0.7)(height * 5.0e-2)(Graphics_Drawing.fillColor(blue))("a = " + Data_Show.show(Data_Show.showNumber)(digit2(x))))(Data_Semigroup.append(Graphics_Drawing.semigroupDrawing)((function () {
                    var $215 = inBox(v.fromF)(p);
                    if ($215) {
                        return draw(new FP(v.fromF, v.toF, p));
                    };
                    return Data_Monoid.mempty(Graphics_Drawing.monoidDrawing);
                })())((function () {
                    if (v.displayT) {
                        var v1 = lineInBox(v.fromF)({
                            a: a,
                            b: b,
                            c: c
                        });
                        if (v1 instanceof Data_Maybe.Just) {
                            return Data_Semigroup.append(Graphics_Drawing.semigroupDrawing)(Graphics_Canvas_Geometry.drawIn(drawableFinal)(tanStyle)(new FS(v.fromF, v.toF, v1.value0)))(Graphics_Drawing.text(Graphics_Drawing_Font.font(Graphics_Drawing_Font.serif)(15)(Data_Semigroup.append(Graphics_Drawing_Font.semigroupFontOptions)(Graphics_Drawing_Font.italic)(Graphics_Drawing_Font.bold)))(width * 0.7)(height * 0.1)(Graphics_Drawing.fillColor(purple))("y = " + (Data_Show.show(Data_Show.showNumber)(a2) + ("x" + (function () {
                                var $218 = c2 < 0.0;
                                if ($218) {
                                    return Data_Show.show(Data_Show.showNumber)(c2);
                                };
                                var $219 = c2 !== 0.0;
                                if ($219) {
                                    return "+" + Data_Show.show(Data_Show.showNumber)(c2);
                                };
                                return "";
                            })()))));
                        };
                        return Data_Monoid.mempty(Graphics_Drawing.monoidDrawing);
                    };
                    return Data_Monoid.mempty(Graphics_Drawing.monoidDrawing);
                })()));
            };
            return Data_Monoid.mempty(Graphics_Drawing.monoidDrawing);
        })())(Data_Foldable.foldr(Data_Foldable.foldableArray)(Data_Semigroup.append(Graphics_Drawing.semigroupDrawing))(Data_Monoid.mempty(Graphics_Drawing.monoidDrawing))(Data_Functor.map(Data_Functor.functorArray)(function (x) {
            var $221 = v.fAndDf.diff.domain(x);
            if ($221) {
                var p = Graphics_Canvas_Geometry.point("")(x)(-v.fAndDf.diff.expression(x));
                var $222 = inBox(v.fromD)(p);
                if ($222) {
                    return Graphics_Canvas_Geometry.drawIn(drawableFinal)(tanStyle)(new FP(v.fromD, v.toD, p));
                };
                return Data_Monoid.mempty(Graphics_Drawing.monoidDrawing);
            };
            return Data_Monoid.mempty(Graphics_Drawing.monoidDrawing);
        })(v.numbers)))))));
    };
};
var beige = Graphics_Drawing.fillColor(Color.rgb(255)(255)(175));
var arbitrary = {
    "function": {
        domain: function (x) {
            return x !== -1.0;
        },
        expression: function (x) {
            return (2.0 * x + 1.0) / (x + 1.0) / (x + 1.0);
        }
    },
    diff: {
        domain: function (x) {
            return x !== -1.0;
        },
        expression: function (x) {
            return (-2.0 * x) / (x + 1.0) / (x + 1.0) / (x + 1.0);
        }
    }
};
var ePage = function (events) {
    return function (draw) {
        return Data_Functor.map(Effect.functorEffect)(Data_Functor.map(Data_Functor.functorFn)(Control_Applicative.liftA1(FRP_Behavior.applicativeABehavior(FRP_Event.functorEvent))(reframe(draw)))(function (event) {
            return FRP_Behavior.unfold(FRP_Event.eventIsEvent)(function (v) {
                return function (st) {
                    if (v.value === "inverse") {
                        return {
                            fAndDf: inverse,
                            numbers: [  ],
                            fromF: st.fromF,
                            fromD: st.fromD,
                            displayD: st.displayD,
                            displayT: st.displayT,
                            previousX: st.previousX,
                            previousY: st.previousY,
                            toF: st.toF,
                            toD: st.toD
                        };
                    };
                    if (v.value === "square") {
                        return {
                            fAndDf: square,
                            numbers: [  ],
                            fromF: st.fromF,
                            fromD: st.fromD,
                            displayD: st.displayD,
                            displayT: st.displayT,
                            previousX: st.previousX,
                            previousY: st.previousY,
                            toF: st.toF,
                            toD: st.toD
                        };
                    };
                    if (v.value === "arbitrary") {
                        return {
                            fAndDf: arbitrary,
                            numbers: [  ],
                            fromF: st.fromF,
                            fromD: st.fromD,
                            displayD: st.displayD,
                            displayT: st.displayT,
                            previousX: st.previousX,
                            previousY: st.previousY,
                            toF: st.toF,
                            toD: st.toD
                        };
                    };
                    if (v.value === "zoomOutX") {
                        return {
                            fromF: {
                                halfWidth: st.fromF.halfWidth * 1.1,
                                halfHeight: st.fromF.halfHeight,
                                center: st.fromF.center
                            },
                            fromD: {
                                halfWidth: st.fromD.halfWidth * 1.1,
                                halfHeight: st.fromD.halfHeight,
                                center: st.fromD.center
                            },
                            fAndDf: st.fAndDf,
                            numbers: st.numbers,
                            displayD: st.displayD,
                            displayT: st.displayT,
                            previousX: st.previousX,
                            previousY: st.previousY,
                            toF: st.toF,
                            toD: st.toD
                        };
                    };
                    if (v.value === "zoomInX") {
                        return {
                            fromF: {
                                halfWidth: st.fromF.halfWidth / 1.1,
                                halfHeight: st.fromF.halfHeight,
                                center: st.fromF.center
                            },
                            fromD: {
                                halfWidth: st.fromD.halfWidth / 1.1,
                                halfHeight: st.fromD.halfHeight,
                                center: st.fromD.center
                            },
                            fAndDf: st.fAndDf,
                            numbers: st.numbers,
                            displayD: st.displayD,
                            displayT: st.displayT,
                            previousX: st.previousX,
                            previousY: st.previousY,
                            toF: st.toF,
                            toD: st.toD
                        };
                    };
                    if (v.value === "F: zoomOutY") {
                        return {
                            fromF: {
                                halfHeight: st.fromF.halfHeight * 1.1,
                                halfWidth: st.fromF.halfWidth,
                                center: st.fromF.center
                            },
                            fAndDf: st.fAndDf,
                            fromD: st.fromD,
                            numbers: st.numbers,
                            displayD: st.displayD,
                            displayT: st.displayT,
                            previousX: st.previousX,
                            previousY: st.previousY,
                            toF: st.toF,
                            toD: st.toD
                        };
                    };
                    if (v.value === "F: zoomInY") {
                        return {
                            fromF: {
                                halfHeight: st.fromF.halfHeight / 1.1,
                                halfWidth: st.fromF.halfWidth,
                                center: st.fromF.center
                            },
                            fAndDf: st.fAndDf,
                            fromD: st.fromD,
                            numbers: st.numbers,
                            displayD: st.displayD,
                            displayT: st.displayT,
                            previousX: st.previousX,
                            previousY: st.previousY,
                            toF: st.toF,
                            toD: st.toD
                        };
                    };
                    if (v.value === "F': zoomOutY") {
                        return {
                            fromD: {
                                halfHeight: st.fromD.halfHeight * 1.1,
                                halfWidth: st.fromD.halfWidth,
                                center: st.fromD.center
                            },
                            fAndDf: st.fAndDf,
                            fromF: st.fromF,
                            numbers: st.numbers,
                            displayD: st.displayD,
                            displayT: st.displayT,
                            previousX: st.previousX,
                            previousY: st.previousY,
                            toF: st.toF,
                            toD: st.toD
                        };
                    };
                    if (v.value === "F': zoomInY") {
                        return {
                            fromD: {
                                halfHeight: st.fromD.halfHeight / 1.1,
                                halfWidth: st.fromD.halfWidth,
                                center: st.fromD.center
                            },
                            fAndDf: st.fAndDf,
                            fromF: st.fromF,
                            numbers: st.numbers,
                            displayD: st.displayD,
                            displayT: st.displayT,
                            previousX: st.previousX,
                            previousY: st.previousY,
                            toF: st.toF,
                            toD: st.toD
                        };
                    };
                    if (v.value === "show Derivative") {
                        return {
                            displayD: true,
                            fAndDf: st.fAndDf,
                            fromD: st.fromD,
                            fromF: st.fromF,
                            numbers: st.numbers,
                            displayT: st.displayT,
                            previousX: st.previousX,
                            previousY: st.previousY,
                            toF: st.toF,
                            toD: st.toD
                        };
                    };
                    if (v.value === "hide Derivative") {
                        return {
                            displayD: false,
                            fAndDf: st.fAndDf,
                            fromD: st.fromD,
                            fromF: st.fromF,
                            numbers: st.numbers,
                            displayT: st.displayT,
                            previousX: st.previousX,
                            previousY: st.previousY,
                            toF: st.toF,
                            toD: st.toD
                        };
                    };
                    if (v.value === "show Tangent") {
                        return {
                            displayT: true,
                            displayD: st.displayD,
                            fAndDf: st.fAndDf,
                            fromD: st.fromD,
                            fromF: st.fromF,
                            numbers: st.numbers,
                            previousX: st.previousX,
                            previousY: st.previousY,
                            toF: st.toF,
                            toD: st.toD
                        };
                    };
                    if (v.value === "hide Tangent") {
                        return {
                            displayT: false,
                            displayD: st.displayD,
                            fAndDf: st.fAndDf,
                            fromD: st.fromD,
                            fromF: st.fromF,
                            numbers: st.numbers,
                            previousX: st.previousX,
                            previousY: st.previousY,
                            toF: st.toF,
                            toD: st.toD
                        };
                    };
                    if (v.value === "mark Coefficient") {
                        return {
                            numbers: Data_Semigroup.append(Data_Semigroup.semigroupArray)(st.numbers)([ Graphics_Canvas_Geometry.abs(Graphics_Canvas_Geometry.basedPoint)(st.fromD.center) ]),
                            displayD: st.displayD,
                            displayT: st.displayT,
                            fAndDf: st.fAndDf,
                            fromD: st.fromD,
                            fromF: st.fromF,
                            previousX: st.previousX,
                            previousY: st.previousY,
                            toF: st.toF,
                            toD: st.toD
                        };
                    };
                    if (v.value === "buttonup") {
                        return {
                            previousX: v.pos.x,
                            previousY: v.pos.y,
                            displayD: st.displayD,
                            displayT: st.displayT,
                            fAndDf: st.fAndDf,
                            fromD: st.fromD,
                            fromF: st.fromF,
                            numbers: st.numbers,
                            toF: st.toF,
                            toD: st.toD
                        };
                    };
                    if (v.value === "buttondown") {
                        var previous = Graphics_Canvas_Geometry.point("")(st.previousX)(st.previousY);
                        var $235 = inBox(st.toF)(previous);
                        if ($235) {
                            var q0 = remap(st.toF)(Graphics_Canvas_Geometry.point("")(v.pos.x)(st.previousY))(st.fromF);
                            var q = remap(st.toF)(Graphics_Canvas_Geometry.point("")(v.pos.x)(v.pos.y))(st.fromF);
                            var p = remap(st.toF)(previous)(st.fromF);
                            return {
                                fromF: {
                                    center: Graphics_Canvas_Geometry.plus(Graphics_Canvas_Geometry.summublePointVector)(st.fromF.center)(Graphics_Canvas_Geometry.vector(q)(p)),
                                    halfHeight: st.fromF.halfHeight,
                                    halfWidth: st.fromF.halfWidth
                                },
                                fromD: {
                                    center: Graphics_Canvas_Geometry.plus(Graphics_Canvas_Geometry.summublePointVector)(st.fromD.center)(Graphics_Canvas_Geometry.vector(q0)(p)),
                                    halfHeight: st.fromD.halfHeight,
                                    halfWidth: st.fromD.halfWidth
                                },
                                previousX: v.pos.x,
                                previousY: v.pos.y,
                                displayD: st.displayD,
                                displayT: st.displayT,
                                fAndDf: st.fAndDf,
                                numbers: st.numbers,
                                toD: st.toD,
                                toF: st.toF
                            };
                        };
                        var $236 = inBox(st.toD)(previous);
                        if ($236) {
                            var q0 = remap(st.toD)(Graphics_Canvas_Geometry.point("")(v.pos.x)(st.previousY))(st.fromD);
                            var q = remap(st.toD)(Graphics_Canvas_Geometry.point("")(v.pos.x)(v.pos.y))(st.fromD);
                            var p = remap(st.toD)(previous)(st.fromD);
                            return {
                                fromD: {
                                    center: Graphics_Canvas_Geometry.plus(Graphics_Canvas_Geometry.summublePointVector)(st.fromD.center)(Graphics_Canvas_Geometry.vector(q)(p)),
                                    halfHeight: st.fromD.halfHeight,
                                    halfWidth: st.fromD.halfWidth
                                },
                                fromF: {
                                    center: Graphics_Canvas_Geometry.plus(Graphics_Canvas_Geometry.summublePointVector)(st.fromF.center)(Graphics_Canvas_Geometry.vector(q0)(p)),
                                    halfHeight: st.fromF.halfHeight,
                                    halfWidth: st.fromF.halfWidth
                                },
                                previousX: v.pos.x,
                                previousY: v.pos.y,
                                displayD: st.displayD,
                                displayT: st.displayT,
                                fAndDf: st.fAndDf,
                                numbers: st.numbers,
                                toD: st.toD,
                                toF: st.toF
                            };
                        };
                        return st;
                    };
                    return st;
                };
            })(Data_Foldable.foldr(Data_Foldable.foldableArray)(Control_Alt.alt(FRP_Event.altEvent))(event)(Data_Functor.map(Data_Functor.functorArray)(function (v) {
                return v.event;
            })(events)))(initialState);
        }))(moveWithButton);
    };
};
var main = function __do() {
    var v = DOM_Editor.setup();
    var v1 = DOM_Editor.getElementById("canvas")(v.document)();
    var v2 = DOM_Editor.getContext2D(v1)();
    var v3 = DOM_Editor.setAttribute("width")(Data_Show.show(Data_Show.showNumber)(width))(v1)();
    var v4 = DOM_Editor.setAttribute("height")(Data_Show.show(Data_Show.showNumber)(height))(v1)();
    var ctx = {
        color: Color.rgb(5)(4)(9),
        lineWidth: 1.5
    };
    var background = Graphics_Drawing.filled(white)(Graphics_Drawing.rectangle(0.0)(0.0)(width)(height));
    var functionBkg = Graphics_Drawing.filled(beige)(curryBox(Graphics_Drawing.rectangle)(functionDisplay));
    var diffBkg = Graphics_Drawing.filled(beige)(curryBox(Graphics_Drawing.rectangle)(diffDisplay));
    var v5 = mkButtonEvent(v)("zoomOutX")();
    var v6 = mkButtonEvent(v)("zoomInX")();
    var v7 = mkButtonEvent(v)("F: zoomOutY")();
    var v8 = mkButtonEvent(v)("F: zoomInY")();
    var v9 = mkButtonEvent(v)("F': zoomOutY")();
    var v10 = mkButtonEvent(v)("F': zoomInY")();
    var v11 = mkButtonEvent(v)("show Derivative")();
    var v12 = mkButtonEvent(v)("hide Derivative")();
    var v13 = mkButtonEvent(v)("show Tangent")();
    var v14 = mkButtonEvent(v)("hide Tangent")();
    var v15 = mkButtonEvent(v)("mark Coefficient")();
    var v16 = DOM_Editor.createElement("select")(v.document)();
    var v17 = mkOptionEvent(v)(v16)("inverse")();
    var v18 = mkOptionEvent(v)(v16)("square")();
    var v19 = mkOptionEvent(v)(v16)("arbitrary")();
    var v20 = DOM_Editor.appendChild(v16)(v.body)();
    var v21 = ePage([ v11, v12, v13, v14, v15, v5, v6, v9, v10, v7, v8, v17, v18, v19 ])((function (dictDrawableSet) {
        return Graphics_Canvas_Geometry.drawIn(dictDrawableSet)(ctx);
    })(drawableFinal))();
    var v22 = FRP_Behavior.animate(Data_Semigroup.append(FRP_Behavior.semigroupABehavior(FRP_Event.functorEvent)(Graphics_Drawing.semigroupDrawing))(Control_Applicative.pure(FRP_Behavior.applicativeABehavior(FRP_Event.functorEvent))(background))(Data_Semigroup.append(FRP_Behavior.semigroupABehavior(FRP_Event.functorEvent)(Graphics_Drawing.semigroupDrawing))(Control_Applicative.pure(FRP_Behavior.applicativeABehavior(FRP_Event.functorEvent))(functionBkg))(Data_Semigroup.append(FRP_Behavior.semigroupABehavior(FRP_Event.functorEvent)(Graphics_Drawing.semigroupDrawing))(Control_Applicative.pure(FRP_Behavior.applicativeABehavior(FRP_Event.functorEvent))(diffBkg))(Data_Semigroup.append(FRP_Behavior.semigroupABehavior(FRP_Event.functorEvent)(Graphics_Drawing.semigroupDrawing))(v21)(Data_Semigroup.append(FRP_Behavior.semigroupABehavior(FRP_Event.functorEvent)(Graphics_Drawing.semigroupDrawing))(Control_Applicative.pure(FRP_Behavior.applicativeABehavior(FRP_Event.functorEvent))(Graphics_Canvas_Geometry.drawIn(Graphics_Canvas_Geometry.drawableSequence(Graphics_Canvas_Geometry.drawableSegment))(ctx)(frame(functionDisplay))))(Data_Semigroup.append(FRP_Behavior.semigroupABehavior(FRP_Event.functorEvent)(Graphics_Drawing.semigroupDrawing))(Control_Applicative.pure(FRP_Behavior.applicativeABehavior(FRP_Event.functorEvent))(Graphics_Canvas_Geometry.drawIn(Graphics_Canvas_Geometry.drawableSequence(Graphics_Canvas_Geometry.drawableSegment))(ctx)(frame(diffDisplay))))(Data_Semigroup.append(FRP_Behavior.semigroupABehavior(FRP_Event.functorEvent)(Graphics_Drawing.semigroupDrawing))(Control_Applicative.pure(FRP_Behavior.applicativeABehavior(FRP_Event.functorEvent))(Graphics_Canvas_Geometry.drawIn(Graphics_Canvas_Geometry.drawableSegment)({
        color: blue,
        lineWidth: ctx.lineWidth
    })(cursor(functionDisplay))))(Control_Applicative.pure(FRP_Behavior.applicativeABehavior(FRP_Event.functorEvent))(Graphics_Canvas_Geometry.drawIn(Graphics_Canvas_Geometry.drawableSegment)({
        color: blue,
        lineWidth: ctx.lineWidth
    })(cursor(diffDisplay)))))))))))(Graphics_Drawing.render(v2))();
    return Data_Unit.unit;
};
module.exports = {
    width: width,
    height: height,
    density: density,
    white: white,
    beige: beige,
    blue: blue,
    purple: purple,
    tanStyle: tanStyle,
    square: square,
    inverse: inverse,
    arbitrary: arbitrary,
    pen: pen,
    plot: plot,
    remap: remap,
    window: window,
    functionDisplay: functionDisplay,
    diffDisplay: diffDisplay,
    local: local,
    frame: frame,
    somePosition: somePosition,
    moveWithButton: moveWithButton,
    FA: FA,
    FP: FP,
    FL: FL,
    FC: FC,
    FH: FH,
    FS: FS,
    grid: grid,
    cursor: cursor,
    initialState: initialState,
    digit2: digit2,
    reframe: reframe,
    ePage: ePage,
    inInterval: inInterval,
    inBox: inBox,
    segmentInBox: segmentInBox,
    lineInBox: lineInBox,
    cb: cb,
    mkButtonEvent: mkButtonEvent,
    mkOptionEvent: mkOptionEvent,
    curryBox: curryBox,
    main: main,
    drawableFinal: drawableFinal
};
