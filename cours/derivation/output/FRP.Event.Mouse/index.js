// Generated by purs version 0.13.3
"use strict";
var Control_Applicative = require("../Control.Applicative/index.js");
var Data_Compactable = require("../Data.Compactable/index.js");
var Data_Foldable = require("../Data.Foldable/index.js");
var Data_Functor = require("../Data.Functor/index.js");
var Data_Maybe = require("../Data.Maybe/index.js");
var Data_Newtype = require("../Data.Newtype/index.js");
var Data_Ord = require("../Data.Ord/index.js");
var Data_Set = require("../Data.Set/index.js");
var Data_Unit = require("../Data.Unit/index.js");
var Effect = require("../Effect/index.js");
var Effect_Ref = require("../Effect.Ref/index.js");
var FRP_Event = require("../FRP.Event/index.js");
var Web_Event_Event = require("../Web.Event.Event/index.js");
var Web_Event_EventTarget = require("../Web.Event.EventTarget/index.js");
var Web_HTML = require("../Web.HTML/index.js");
var Web_HTML_Window = require("../Web.HTML.Window/index.js");
var Web_UIEvent_MouseEvent = require("../Web.UIEvent.MouseEvent/index.js");
var Mouse = function (x) {
    return x;
};
var withPosition = function (v) {
    return function (e) {
        return FRP_Event.makeEvent(function (k) {
            return FRP_Event.subscribe(e)(function (value) {
                return function __do() {
                    var v1 = Effect_Ref.read(v.position)();
                    return k({
                        value: value,
                        pos: v1
                    })();
                };
            });
        });
    };
};
var withButtons = function (v) {
    return function (e) {
        return FRP_Event.makeEvent(function (k) {
            return FRP_Event.subscribe(e)(function (value) {
                return function __do() {
                    var v1 = Effect_Ref.read(v.buttons)();
                    return k({
                        value: value,
                        buttons: v1
                    })();
                };
            });
        });
    };
};
var up = FRP_Event.makeEvent(function (k) {
    return function __do() {
        var v = Data_Functor.map(Effect.functorEffect)(Web_HTML_Window.toEventTarget)(Web_HTML.window)();
        var v1 = Web_Event_EventTarget.eventListener(function (e) {
            return Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function (me) {
                return k(Web_UIEvent_MouseEvent.button(me));
            })(Web_UIEvent_MouseEvent.fromEvent(e));
        })();
        Web_Event_EventTarget.addEventListener(Data_Newtype.wrap(Web_Event_Event.newtypeEventType)("mouseup"))(v1)(false)(v)();
        return Web_Event_EventTarget.removeEventListener(Data_Newtype.wrap(Web_Event_Event.newtypeEventType)("mouseup"))(v1)(false)(v);
    };
});
var move = function (m) {
    return Data_Compactable.compact(FRP_Event.compactableEvent)(Data_Functor.map(FRP_Event.functorEvent)(function (v) {
        return v.pos;
    })(withPosition(m)(Control_Applicative.pure(FRP_Event.applicativeEvent)(Data_Unit.unit))));
};
var getMouse = function __do() {
    var v = Effect_Ref["new"](Data_Maybe.Nothing.value)();
    var v1 = Effect_Ref["new"](Data_Set.empty)();
    var v2 = Data_Functor.map(Effect.functorEffect)(Web_HTML_Window.toEventTarget)(Web_HTML.window)();
    var v3 = Web_Event_EventTarget.eventListener(function (e) {
        return Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function (me) {
            return Effect_Ref.write(new Data_Maybe.Just({
                x: Web_UIEvent_MouseEvent.clientX(me),
                y: Web_UIEvent_MouseEvent.clientY(me)
            }))(v);
        })(Web_UIEvent_MouseEvent.fromEvent(e));
    })();
    var v4 = Web_Event_EventTarget.eventListener(function (e) {
        return Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function (me) {
            return Effect_Ref.modify(Data_Set.insert(Data_Ord.ordInt)(Web_UIEvent_MouseEvent.button(me)))(v1);
        })(Web_UIEvent_MouseEvent.fromEvent(e));
    })();
    var v5 = Web_Event_EventTarget.eventListener(function (e) {
        return Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function (me) {
            return Effect_Ref.modify(Data_Set["delete"](Data_Ord.ordInt)(Web_UIEvent_MouseEvent.button(me)))(v1);
        })(Web_UIEvent_MouseEvent.fromEvent(e));
    })();
    Web_Event_EventTarget.addEventListener(Data_Newtype.wrap(Web_Event_Event.newtypeEventType)("mousemove"))(v3)(false)(v2)();
    Web_Event_EventTarget.addEventListener(Data_Newtype.wrap(Web_Event_Event.newtypeEventType)("mousedown"))(v4)(false)(v2)();
    Web_Event_EventTarget.addEventListener(Data_Newtype.wrap(Web_Event_Event.newtypeEventType)("mouseup"))(v5)(false)(v2)();
    var dispose = function __do() {
        Web_Event_EventTarget.removeEventListener(Data_Newtype.wrap(Web_Event_Event.newtypeEventType)("mousemove"))(v3)(false)(v2)();
        Web_Event_EventTarget.removeEventListener(Data_Newtype.wrap(Web_Event_Event.newtypeEventType)("mousedown"))(v4)(false)(v2)();
        return Web_Event_EventTarget.removeEventListener(Data_Newtype.wrap(Web_Event_Event.newtypeEventType)("mouseup"))(v5)(false)(v2)();
    };
    return {
        position: v,
        buttons: v1,
        dispose: dispose
    };
};
var down = FRP_Event.makeEvent(function (k) {
    return function __do() {
        var v = Data_Functor.map(Effect.functorEffect)(Web_HTML_Window.toEventTarget)(Web_HTML.window)();
        var v1 = Web_Event_EventTarget.eventListener(function (e) {
            return Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function (me) {
                return k(Web_UIEvent_MouseEvent.button(me));
            })(Web_UIEvent_MouseEvent.fromEvent(e));
        })();
        Web_Event_EventTarget.addEventListener(Data_Newtype.wrap(Web_Event_Event.newtypeEventType)("mousedown"))(v1)(false)(v)();
        return Web_Event_EventTarget.removeEventListener(Data_Newtype.wrap(Web_Event_Event.newtypeEventType)("mousedown"))(v1)(false)(v);
    };
});
var disposeMouse = function (v) {
    return v.dispose;
};
module.exports = {
    getMouse: getMouse,
    disposeMouse: disposeMouse,
    move: move,
    down: down,
    up: up,
    withPosition: withPosition,
    withButtons: withButtons
};
